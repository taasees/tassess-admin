{"version":3,"file":"types.js","names":[],"sources":["../../src/plugin-utils/types.ts"],"sourcesContent":["/**\n * ⚠️ DO NOT EDIT ⚠️\n * These types are duplicated from packages/gatsby/src/bootstrap/load-plugins/types.ts\n * If you edit this file, make sure to edit that file too!!!\n * They are duplicate to avoid a circular dependency between gatsby-plugin-utils <=> gatsby <=> gatsby-plugin-utils\n * See gatsbyjs/gatsby#27578\n */\n\nexport interface IRawSiteConfig {\n  plugins?: Array<PluginRef>\n}\n\nexport interface ISiteConfig extends IRawSiteConfig {\n  plugins?: Array<IPluginRefObject>\n}\n\n// There are two top-level \"Plugin\" concepts:\n// 1. IPluginInfo, for processed plugins, and\n// 2. PluginRef, for plugin configs\n\nexport interface IPluginInfo {\n  /** Unique ID describing a plugin */\n  id: string\n\n  /** The absolute path to the plugin */\n  resolve: string\n\n  /** The plugin name */\n  name: string\n\n  /** The plugin version (can be content hash) */\n  version: string\n\n  /** Options passed to the plugin */\n  pluginOptions?: IPluginInfoOptions\n\n  module?: any\n  modulePath?: string\n}\n\nexport interface IPluginInfoOptions {\n  plugins?: Array<IPluginInfo>\n  path?: string\n  [option: string]: unknown\n}\n\nexport interface IFlattenedPlugin extends IPluginInfo {\n  skipSSR?: boolean\n  ssrAPIs: Array<string>\n  nodeAPIs: Array<string>\n  browserAPIs: Array<string>\n}\n\nexport interface IPluginRefObject {\n  resolve: string\n  options?: IPluginRefOptions\n  parentDir?: string\n  subPluginPaths?: Array<string>\n  module?: any\n  modulePath?: string\n}\n\nexport type PluginRef = string | IPluginRefObject\n\nexport interface IPluginRefOptions {\n  plugins?: Array<PluginRef>\n  path?: string\n  [option: string]: unknown\n}\n"],"mappings":""}