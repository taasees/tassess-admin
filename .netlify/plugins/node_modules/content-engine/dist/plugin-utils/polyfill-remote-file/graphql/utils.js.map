{"version":3,"file":"utils.js","names":["validateAndNormalizeFormats","formats","sourceFormat","formatSet","Set","has","delete","add","Error","calculateImageDimensions","originalDimensions","fit","width","requestedWidth","height","requestedHeight","aspectRatio","requestedAspectRatio","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","Math","min","round","max"],"sources":["../../../../src/plugin-utils/polyfill-remote-file/graphql/utils.ts"],"sourcesContent":["import { ImageFormat, ImageFit, WidthOrHeight } from \"../types\"\n\nexport function validateAndNormalizeFormats(\n  formats: Array<ImageFormat>,\n  sourceFormat: ImageFormat\n): Set<ImageFormat> {\n  const formatSet = new Set<ImageFormat>(formats)\n\n  // convert auto in format of source image\n  if (formatSet.has(`auto`)) {\n    formatSet.delete(`auto`)\n    formatSet.add(sourceFormat)\n  }\n\n  if (formatSet.has(`jpg`) && formatSet.has(`png`)) {\n    throw new Error(`Cannot specify both JPG and PNG formats`)\n  }\n\n  return formatSet\n}\n\n/**\n * Generate correct width and height like sharp will do\n * @see https://sharp.pixelplumbing.com/api-resize#resize\n */\nexport function calculateImageDimensions(\n  originalDimensions: { width: number; height: number },\n  {\n    fit,\n    width: requestedWidth,\n    height: requestedHeight,\n    aspectRatio: requestedAspectRatio,\n  }: { fit: ImageFit; aspectRatio: number } & WidthOrHeight\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  let imageAspectRatio\n  if (requestedAspectRatio) {\n    imageAspectRatio = requestedAspectRatio\n  } else {\n    imageAspectRatio = originalDimensions.width / originalDimensions.height\n  }\n\n  let width = requestedWidth\n  let height = requestedHeight\n  switch (fit) {\n    case `inside`: {\n      const widthOption = requestedWidth ?? Number.MAX_SAFE_INTEGER\n      const heightOption = requestedHeight ?? Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = requestedWidth ?? 0\n      const heightOption = requestedHeight ?? 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `fill`: {\n      width = requestedWidth ?? originalDimensions.width\n      height = requestedHeight ?? originalDimensions.height\n\n      break\n    }\n\n    default: {\n      if (requestedWidth && !requestedHeight) {\n        width = requestedWidth\n        height = Math.round(requestedWidth / imageAspectRatio)\n      }\n\n      if (requestedHeight && !requestedWidth) {\n        width = Math.round(requestedHeight * imageAspectRatio)\n        height = requestedHeight\n      }\n    }\n  }\n\n  return {\n    width: width as number,\n    height: height as number,\n    aspectRatio: (width as number) / (height as number),\n  }\n}\n"],"mappings":"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"}