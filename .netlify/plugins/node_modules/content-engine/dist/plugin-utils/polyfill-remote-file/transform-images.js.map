{"version":3,"file":"transform-images.js","names":["queue","Map","transformImage","outputDir","args","url","filename","contentDigest","httpHeaders","cache","getCache","digest","createContentDigest","cacheKey","cachedValue","get","pathExists","ext","path","extname","basename","filePath","fetchRemoteFile","directory","name","outputPath","join","mkdirp","dirname","has","queued","transforms","push","promise","then","set","defer","Promise","resolve","reject","setImmediate","delete","resize","readFile","err","resizeImageWithSharp","pipeline","width","height","format","quality","Buffer","writeFile","resizedImage","jpeg","png","webp","avif","toFormat","toBuffer","undefined","buffer","sharp","getSharpInstance","Array","isArray","results","transform"],"sources":["../../../src/plugin-utils/polyfill-remote-file/transform-images.ts"],"sourcesContent":["import path from \"path\"\nimport { readFile, writeFile, pathExists, mkdirp } from \"fs-extra\"\nimport { fetchRemoteFile } from \"../../core-utils/fetch-remote-file\"\nimport { createContentDigest } from \"../../core-utils/create-content-digest\"\nimport getSharpInstance from \"gatsby-sharp\"\nimport { getCache } from \"./utils/cache\"\n\nexport interface IResizeArgs {\n  width: number\n  height: number\n  format: string\n  outputPath?: string\n  quality: number\n}\n\n// Lots of work to get the sharp instance\ntype Pipeline = ReturnType<Awaited<ReturnType<typeof getSharpInstance>>>\n\n// queue is used inside transformImage to batch multiple transforms together\n// more info inside the transformImage function\nconst queue = new Map<\n  string,\n  { transforms: Array<IResizeArgs>; promise: Promise<string> }\n>()\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport async function transformImage({\n  outputDir,\n  args: { url, filename, contentDigest, httpHeaders, ...args },\n}: {\n  outputDir: string\n  args: IResizeArgs & {\n    url: string\n    filename: string\n    contentDigest?: string\n    httpHeaders: Record<string, string> | undefined\n  }\n}): Promise<string> {\n  const cache = getCache()\n\n  const digest = createContentDigest({ url, filename, contentDigest, args })\n  const cacheKey = `image-cdn:` + digest + `:transform`\n  const cachedValue = (await cache.get(cacheKey)) as string | undefined\n  if (cachedValue && (await pathExists(cachedValue))) {\n    return cachedValue\n  }\n\n  const ext = path.extname(filename)\n  const basename = path.basename(filename, ext)\n  const filePath = await fetchRemoteFile({\n    directory: cache.directory,\n    url,\n    name: basename,\n    ext,\n    cacheKey: contentDigest,\n    httpHeaders,\n  })\n\n  const outputPath = path.join(outputDir, filename)\n  await mkdirp(path.dirname(outputPath))\n\n  // if the queue already contains the url, we're going to add it to queue so, we can batch the transforms together.\n  // We use setImmediate to not block the event loop so the queue can fill up.\n  if (queue.has(url)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const queued = queue.get(url)!\n\n    queued.transforms.push({ ...args, outputPath })\n\n    return queued.promise.then(() => {\n      cache.set(cacheKey, outputPath)\n\n      return outputPath\n    })\n  } else {\n    const defer = new Promise<string>((resolve, reject) => {\n      setImmediate(async () => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const transforms = queue.get(url)!.transforms\n        queue.delete(url)\n\n        try {\n          await resize(await readFile(filePath), transforms)\n          await cache.set(cacheKey, outputPath)\n\n          resolve(outputPath)\n        } catch (err) {\n          reject(err)\n        }\n      })\n    })\n\n    queue.set(url, {\n      promise: defer,\n      transforms: [{ ...args, outputPath }],\n    })\n\n    return defer\n  }\n}\n\nasync function resizeImageWithSharp(\n  pipeline: Pipeline | Buffer,\n  { width, height, format, outputPath, quality }: IResizeArgs\n): Promise<Buffer | void> {\n  if (pipeline instanceof Buffer) {\n    if (!outputPath) {\n      return pipeline\n    }\n\n    return writeFile(outputPath, pipeline)\n  }\n\n  const resizedImage = pipeline\n    .resize(width, height, {})\n    .jpeg({ quality })\n    .png({ quality })\n    .webp({ quality })\n    .avif({ quality })\n    .toFormat(\n      format as unknown as keyof Awaited<\n        ReturnType<typeof getSharpInstance>\n      >[\"format\"]\n    )\n\n  if (outputPath) {\n    await writeFile(outputPath, await resizedImage.toBuffer())\n    return undefined\n  } else {\n    return await resizedImage.toBuffer()\n  }\n}\n\nasync function resize(\n  buffer: Buffer,\n  transforms: IResizeArgs | Array<IResizeArgs>\n): Promise<Buffer | void | Array<Buffer | void>> {\n  const sharp = await getSharpInstance()\n\n  let pipeline: Pipeline | undefined\n  if (sharp) {\n    pipeline = sharp(buffer)\n  }\n\n  if (Array.isArray(transforms)) {\n    const results: Array<Buffer | void> = []\n    for (const transform of transforms) {\n      results.push(await resizeImageWithSharp(pipeline ?? buffer, transform))\n    }\n\n    return results\n  } else {\n    return resizeImageWithSharp(pipeline ?? buffer, transforms)\n  }\n}\n"],"mappings":"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"}