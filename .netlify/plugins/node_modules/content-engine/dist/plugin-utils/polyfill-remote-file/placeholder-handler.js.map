{"version":3,"file":"placeholder-handler.js","names":["PlaceholderType","QUEUE_CONCURRENCY","PLACEHOLDER_BASE64_WIDTH","PLACEHOLDER_QUALITY","PLACEHOLDER_DOMINANT_WIDTH","PLACEHOLDER_TRACED_WIDTH","tmpDir","didShowTraceSVGRemovalWarning","queue","Queue","url","contentDigest","width","height","type","store","cb","sharp","getSharpInstance","cache","getCache","mkdtemp","path","join","directory","httpHeaders","getRequestHeadersForUrl","filePath","fetchRemoteFile","cacheKey","TRACED_SVG","console","warn","BLURRED","buffer","fileStream","createReadStream","pipeline","pipe","resize","Math","ceil","toBuffer","e","readFile","toString","DOMINANT_COLOR","failOn","dominant","stats","r","g","b","generatePlaceholder","source","placeholderType","fallback","runPlaceholder","id","placeholderUrl","originalUrl","format","getImageFormatFromMimeType","mimeType","internal","placeholderOptions","quality","backgroundColor","cachedValue","get","mutex","createMutex","acquire","generatePlaceholderUrl","originalWidth","originalHeight","result","Promise","resolve","reject","push","err","set","release","aspectRatio","replace","String","floor"],"sources":["../../../src/plugin-utils/polyfill-remote-file/placeholder-handler.ts"],"sourcesContent":["import path from \"path\"\nimport { createReadStream, readFile, mkdtemp } from \"fs-extra\"\nimport { fetchRemoteFile } from \"../../core-utils/fetch-remote-file\"\nimport { createMutex } from \"../../core-utils/mutex\"\nimport Queue from \"fastq\"\nimport getSharpInstance from \"gatsby-sharp\"\nimport { getCache } from \"./utils/cache\"\nimport { getImageFormatFromMimeType } from \"./utils/mime-type-helpers\"\nimport { getRequestHeadersForUrl } from \"./utils/get-request-headers-for-url\"\n\nimport type { IRemoteImageNode } from \"./types\"\nimport type { Store } from \"../../types\"\n\nexport enum PlaceholderType {\n  BLURRED = `blurred`,\n  DOMINANT_COLOR = `dominantColor`,\n  TRACED_SVG = `tracedSVG`,\n}\ninterface IPlaceholderGenerationArgs {\n  placeholderUrl: string | undefined\n  originalUrl: string\n  format: string\n  width: number\n  height: number\n  id: string\n  contentDigest: string\n}\n\nconst QUEUE_CONCURRENCY = 10\nconst PLACEHOLDER_BASE64_WIDTH = 20\nconst PLACEHOLDER_QUALITY = 25\nconst PLACEHOLDER_DOMINANT_WIDTH = 200\nconst PLACEHOLDER_TRACED_WIDTH = 200\n\nlet tmpDir: string\n\nlet didShowTraceSVGRemovalWarning = false\nconst queue = Queue<\n  undefined,\n  {\n    url: string\n    contentDigest: string\n    width: number\n    height: number\n    type: PlaceholderType\n    store?: Store\n  },\n  string\n  // eslint-disable-next-line consistent-return\n>(async function (\n  { url, contentDigest, width, height, type, store },\n  cb\n): Promise<void> {\n  const sharp = await getSharpInstance()\n\n  if (!tmpDir) {\n    const cache = getCache()\n    tmpDir = await mkdtemp(path.join(cache.directory, `placeholder-`))\n  }\n\n  const httpHeaders = getRequestHeadersForUrl(url, store)\n\n  const filePath = await fetchRemoteFile({\n    url,\n    cacheKey: contentDigest,\n    directory: tmpDir,\n    httpHeaders,\n  })\n\n  if (type === PlaceholderType.TRACED_SVG) {\n    if (!didShowTraceSVGRemovalWarning) {\n      // we should not hit this code path, field resolver should fallback earlier, this is just in-case.\n      // also this falls back to BLURRED because the shape is compatible. DOMINANT_COLOR is not compatible\n      // and fallback to DOMINANT_COLOR need to happen very early on and not when already generating value\n      console.warn(\n        `\"TRACED_SVG\" placeholder is no longer supported, falling back to \"BLURRED\". See https://gatsby.dev/tracesvg-removal/`\n      )\n      didShowTraceSVGRemovalWarning = true\n    }\n    type = PlaceholderType.BLURRED\n  }\n\n  switch (type) {\n    case PlaceholderType.BLURRED: {\n      let buffer: Buffer\n\n      try {\n        const fileStream = createReadStream(filePath)\n        const pipeline = sharp()\n        fileStream.pipe(pipeline)\n        buffer = await pipeline\n          .resize(\n            PLACEHOLDER_BASE64_WIDTH,\n            Math.ceil(PLACEHOLDER_BASE64_WIDTH / (width / height))\n          )\n          .toBuffer()\n      } catch (e) {\n        buffer = await readFile(filePath)\n      }\n\n      return cb(null, `data:image/jpg;base64,${buffer.toString(`base64`)}`)\n    }\n    case PlaceholderType.DOMINANT_COLOR: {\n      const fileStream = createReadStream(filePath)\n      const pipeline = sharp({ failOn: `none` })\n      fileStream.pipe(pipeline)\n      const { dominant } = await pipeline.stats()\n\n      return cb(\n        null,\n        dominant\n          ? `rgb(${dominant.r},${dominant.g},${dominant.b})`\n          : `rgba(0,0,0,0)`\n      )\n    }\n  }\n},\nQUEUE_CONCURRENCY)\n\n// eslint-disable-next-line consistent-return\nexport async function generatePlaceholder(\n  source: IRemoteImageNode,\n  placeholderType: PlaceholderType,\n  store?: Store\n): Promise<{ fallback?: string; backgroundColor?: string }> {\n  switch (placeholderType) {\n    case PlaceholderType.BLURRED: {\n      return {\n        fallback: await runPlaceholder({\n          id: source.id,\n          placeholderUrl: source.placeholderUrl,\n          originalUrl: source.url,\n          format: getImageFormatFromMimeType(source.mimeType),\n          width: source.width,\n          height: source.height,\n          contentDigest: source.internal.contentDigest,\n          type: PlaceholderType.BLURRED,\n          placeholderOptions: {\n            width: PLACEHOLDER_BASE64_WIDTH,\n            quality: PLACEHOLDER_QUALITY,\n          },\n          store,\n        }),\n      }\n    }\n    case PlaceholderType.DOMINANT_COLOR: {\n      return {\n        backgroundColor: await runPlaceholder({\n          id: source.id,\n          placeholderUrl: source.placeholderUrl,\n          originalUrl: source.url,\n          format: getImageFormatFromMimeType(source.mimeType),\n          width: source.width,\n          height: source.height,\n          contentDigest: source.internal.contentDigest,\n          type: PlaceholderType.DOMINANT_COLOR,\n          placeholderOptions: {\n            width: PLACEHOLDER_DOMINANT_WIDTH,\n            quality: PLACEHOLDER_QUALITY,\n          },\n          store,\n        }),\n      }\n    }\n    case PlaceholderType.TRACED_SVG: {\n      return {\n        fallback: await runPlaceholder({\n          id: source.id,\n          placeholderUrl: source.placeholderUrl,\n          originalUrl: source.url,\n          format: getImageFormatFromMimeType(source.mimeType),\n          width: source.width,\n          height: source.height,\n          contentDigest: source.internal.contentDigest,\n          type: PlaceholderType.TRACED_SVG,\n          placeholderOptions: {\n            width: PLACEHOLDER_TRACED_WIDTH,\n            quality: PLACEHOLDER_QUALITY,\n          },\n          store,\n        }),\n      }\n    }\n  }\n}\n\nasync function runPlaceholder({\n  placeholderUrl,\n  originalUrl,\n  width,\n  height,\n  id,\n  contentDigest,\n  type,\n  placeholderOptions,\n  store,\n}: IPlaceholderGenerationArgs & {\n  type: PlaceholderType\n  placeholderOptions: { width: number; quality: number }\n  store?: Store\n}): Promise<string> {\n  const cache = getCache()\n  const cacheKey = `image-cdn:${id}-${contentDigest}:${type}`\n\n  let cachedValue = await cache.get(cacheKey)\n  if (cachedValue) {\n    return cachedValue\n  }\n\n  const mutex = createMutex(\n    `gatsby-plugin-utils:placeholder:${id}-${contentDigest}`\n  )\n  await mutex.acquire()\n\n  try {\n    // check cache again after mutex is acquired\n    cachedValue = await cache.get(cacheKey)\n    if (cachedValue) {\n      return cachedValue\n    }\n\n    let url = originalUrl\n    if (placeholderUrl) {\n      url = generatePlaceholderUrl({\n        url: placeholderUrl,\n        originalWidth: width,\n        originalHeight: height,\n        ...placeholderOptions,\n      })\n    }\n\n    const result = await new Promise<string>((resolve, reject) => {\n      queue.push(\n        {\n          url,\n          contentDigest,\n          width,\n          height,\n          type,\n          store,\n        },\n        (err, result) => {\n          if (err) {\n            reject(err)\n            return\n          }\n\n          resolve(result as string)\n        }\n      )\n    })\n\n    await cache.set(cacheKey, result)\n\n    return result\n  } finally {\n    await mutex.release()\n  }\n}\n\nfunction generatePlaceholderUrl({\n  url,\n  width,\n  quality,\n  originalWidth,\n  originalHeight,\n}: {\n  url: string\n  width: number\n  quality: number\n  originalWidth: number\n  originalHeight: number\n}): string {\n  const aspectRatio = originalWidth / originalHeight\n\n  return url\n    .replace(`%width%`, String(width))\n    .replace(`%height%`, Math.floor(width / aspectRatio).toString())\n    .replace(`%quality%`, String(quality))\n}\n"],"mappings":"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"}