{"version":3,"file":"save-state.js","names":["_","require","report","redux","saveInProgress","saveState","startTime","Date","now","err","warn","message","duration","console","error","module","exports"],"sources":["../../src/redux/save-state.js"],"sourcesContent":["const _ = require(`lodash`)\nconst report = require(`../reporter`)\n// const { captureEvent } = require(`gatsby-telemetry`)\nconst redux = require(`./`)\n\nlet saveInProgress = false\nasync function saveState() {\n  if (saveInProgress) return\n  saveInProgress = true\n\n  const startTime = Date.now()\n\n  try {\n    await redux.saveState()\n  } catch (err) {\n    report.warn(`Error persisting state: ${(err && err.message) || err}`)\n  }\n\n  try {\n    const duration = (Date.now() - startTime) / 1000\n    // captureEvent(`INTERNAL_STATE_PERSISTENCE_DURATION`, {\n    //   name: `Save Internal State`,\n    //   duration: Math.round(duration),\n    // })\n  } catch (err) {\n    console.error(err)\n  }\n\n  saveInProgress = false\n}\n\nmodule.exports = {\n  saveState,\n}\n"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAO,CAAC;AAC3B,MAAMC,MAAM,GAAGD,OAAO,CAAE,aAAY,CAAC;AACrC;AACA,MAAME,KAAK,GAAGF,OAAO,CAAE,IAAG,CAAC;AAE3B,IAAIG,cAAc,GAAG,KAAK;AAC1B,eAAeC,SAAS,GAAG;EACzB,IAAID,cAAc,EAAE;EACpBA,cAAc,GAAG,IAAI;EAErB,MAAME,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;EAE5B,IAAI;IACF,MAAML,KAAK,CAACE,SAAS,EAAE;EACzB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZP,MAAM,CAACQ,IAAI,CAAE,2BAA2BD,GAAG,IAAIA,GAAG,CAACE,OAAO,IAAKF,GAAI,EAAC,CAAC;EACvE;EAEA,IAAI;IACF,MAAMG,QAAQ,GAAG,CAACL,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAS,IAAI,IAAI;IAChD;IACA;IACA;IACA;EACF,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZI,OAAO,CAACC,KAAK,CAACL,GAAG,CAAC;EACpB;EAEAL,cAAc,GAAG,KAAK;AACxB;AAEAW,MAAM,CAACC,OAAO,GAAG;EACfX;AACF,CAAC"}