{"version":3,"file":"public.js","names":["isNotTestEnv","process","env","NODE_ENV","actions","findChildren","initialChildren","children","queue","traversedNodes","Set","length","currentChild","getNode","pop","has","id","add","newChildren","push","deleteNode","node","plugin","internalNode","createDeleteAction","type","payload","isRecursiveChildrenDelete","deleteAction","deleteDescendantsActions","map","getNextNodeCounter","lastNodeCounter","store","getState","status","LAST_NODE_COUNTER","Number","MAX_SAFE_INTEGER","Error","createNode","actionOptions","console","log","chalk","bold","red","internal","array","parent","owner","reporter","error","JSON","stringify","panic","trackParams","name","version","fields","stripIndent","sanitizeNode","oldNode","parentSpan","setTag","deleteActions","updateNodeAction","hasNodeChanged","contentDigest","typeName","counter","args","dispatch","createNodeAction","Array","isArray","find","action","Promise","resolve","undefined","traceId","maybePromise","apiRunnerNode","wrapNode","traceTags","nodeId","nodeType","then","res","getDataStore","ready","touchNode","createNodeField","value","fieldOwners","schemaFieldName","split","fieldOwner","addedField","createParentChildLink","child","includes","setBabelOptions","options","exit","setBabelPlugin","config","createJob","job","msg","reportOnce","createJobV2","internalJob","createInternalJob","createJobV2FromInternalJob","addGatsbyImageSourceUrl","sourceUrl","setJob","endJob","setPluginStatus","unstable_createNodeManifest","manifestId","updatedAtUTC","pluginName","enableStatefulSourceNodes","setRequestHeaders","domain","headers","headersIsObject","noHeaders","noDomain","warn","baseDomain","url","parse","hostname"],"sources":["../../../src/redux/actions/public.ts"],"sourcesContent":["import reporter from \"../../reporter\"\nimport chalk from \"chalk\"\nimport _ from \"lodash\"\nimport { stripIndent } from \"common-tags\"\nimport url from \"url\"\nimport { hasNodeChanged } from \"../../utils/nodes\"\nimport { getNode, getDataStore } from \"../../datastore\"\nimport { sanitizeNode } from \"../../utils/sanitize-node\"\nimport { store } from \"../index\"\n// import { nodeSchema } from \"../../joi-schemas/joi\"\nimport apiRunnerNode from \"../../utils/api-runner-node\"\n// import { trackCli } from \"gatsby-telemetry\"\n// const { getNonGatsbyCodeFrame } = require(`../../utils/stack-trace-utils`)\nimport { createJobV2FromInternalJob } from \"./internal\"\nimport { reportOnce } from \"../../utils/report-once\"\nimport { wrapNode } from \"../../utils/detect-node-mutations\"\n\nconst isNotTestEnv = process.env.NODE_ENV !== `test`\n\nimport { createInternalJob } from \"../../utils/jobs/manager\"\n\nconst actions = {}\n\nconst findChildren = initialChildren => {\n  const children = [...initialChildren]\n  const queue = [...initialChildren]\n  const traversedNodes = new Set()\n\n  while (queue.length > 0) {\n    const currentChild = getNode(queue.pop())\n    if (!currentChild || traversedNodes.has(currentChild.id)) {\n      continue\n    }\n    traversedNodes.add(currentChild.id)\n    const newChildren = currentChild.children\n    if (_.isArray(newChildren) && newChildren.length > 0) {\n      children.push(...newChildren)\n      queue.push(...newChildren)\n    }\n  }\n  return children\n}\n\nimport type { IGatsbyPlugin as Plugin } from \"../types\"\n\ninterface Job {\n  id: string\n}\n\ninterface JobV2 {\n  name: string\n  inputPaths: Array<string>\n  outputDir: string\n  args: Record<string, unknown>\n}\n\ninterface ActionOptions {\n  traceId?: string\n  parentSpan?: Record<string, unknown>\n  followsSpan?: Record<string, unknown>\n}\n\n/**\n * Delete a node\n * @param {object} node A node object. See the \"createNode\" action for more information about the node object details.\n * @example\n * deleteNode(node)\n */\n// @ts-ignore\nactions.deleteNode = (node: any, plugin?: Plugin) => {\n  const id = node && node.id\n\n  // Always get node from the store, as the node we get as an arg\n  // might already have been deleted.\n  const internalNode = getNode(id)\n\n  const createDeleteAction = node => {\n    return {\n      type: `DELETE_NODE`,\n      plugin,\n      payload: node,\n      // main node need to be owned by plugin that calls deleteNode\n      // child nodes should skip ownership check\n      isRecursiveChildrenDelete: node !== internalNode,\n    }\n  }\n\n  const deleteAction = createDeleteAction(internalNode)\n\n  // It's possible the file node was never created as sometimes tools will\n  // write and then immediately delete temporary files to the file system.\n  const deleteDescendantsActions =\n    internalNode &&\n    findChildren(internalNode.children).map(getNode).map(createDeleteAction)\n\n  if (deleteDescendantsActions && deleteDescendantsActions.length) {\n    return [...deleteDescendantsActions, deleteAction]\n  } else {\n    return deleteAction\n  }\n}\n\n// We add a counter to node.internal for fast comparisons/intersections\n// of various node slices. The counter must increase even across builds.\nfunction getNextNodeCounter() {\n  const lastNodeCounter = store.getState().status.LAST_NODE_COUNTER ?? 0\n  if (lastNodeCounter >= Number.MAX_SAFE_INTEGER) {\n    throw new Error(\n      `Could not create more nodes. Maximum node count is reached: ${lastNodeCounter}`\n    )\n  }\n  return lastNodeCounter + 1\n}\n\n// memberof notation is added so this code can be referenced instead of the wrapper.\n/**\n * Create a new node.\n * @memberof actions\n * @param {Object} node a node object\n * @param {string} node.id The node's ID. Must be globally unique.\n * @param {string} node.parent The ID of the parent's node. If the node is\n * derived from another node, set that node as the parent. Otherwise it can\n * just be `null`.\n * @param {Array} node.children An array of children node IDs. If you're\n * creating the children nodes while creating the parent node, add the\n * children node IDs here directly. If you're adding a child node to a\n * parent node created by a plugin, you can't mutate this value directly\n * to add your node id, instead use the action creator `createParentChildLink`.\n * @param {Object} node.internal node fields that aren't generally\n * interesting to consumers of node data but are very useful for plugin writers\n * and Gatsby core. Only fields described below are allowed in `internal` object.\n * Using any type of custom fields will result in validation errors.\n * @param {string} node.internal.mediaType An optional field to indicate to\n * transformer plugins that your node has raw content they can transform.\n * Use either an official media type (we use mime-db as our source\n * (https://www.npmjs.com/package/mime-db) or a made-up one if your data\n * doesn't fit in any existing bucket. Transformer plugins use node media types\n * for deciding if they should transform a node into a new one. E.g.\n * markdown transformers look for media types of\n * `text/markdown`.\n * @param {string} node.internal.type An arbitrary globally unique type\n * chosen by the plugin creating the node. Should be descriptive of the\n * node as the type is used in forming GraphQL types so users will query\n * for nodes based on the type chosen here. Nodes of a given type can\n * only be created by one plugin.\n * @param {string} node.internal.content An optional field. This is rarely\n * used. It is used when a source plugin sources data it doesn't know how\n * to transform e.g. a markdown string pulled from an API. The source plugin\n * can defer the transformation to a specialized transformer plugin like\n * gatsby-transformer-remark. This `content` field holds the raw content\n * (so for the markdown case, the markdown string).\n *\n * Data that's already structured should be added to the top-level of the node\n * object and _not_ added here. You should not `JSON.stringify` your node's\n * data here.\n *\n * If the content is very large and can be lazy-loaded, e.g. a file on disk,\n * you can define a `loadNodeContent` function for this node and the node\n * content will be lazy loaded when it's needed.\n * @param {string} node.internal.contentDigest the digest for the content\n * of this node. Helps Gatsby avoid doing extra work on data that hasn't\n * changed.\n * @param {string} node.internal.description An optional field. Human\n * readable description of what this node represent / its source. It will\n * be displayed when type conflicts are found, making it easier to find\n * and correct type conflicts.\n * @returns {Promise} The returned Promise resolves when all cascading\n * `onCreateNode` API calls triggered by `createNode` have finished.\n * @example\n * createNode({\n *   // Data for the node.\n *   field1: `a string`,\n *   field2: 10,\n *   field3: true,\n *   ...arbitraryOtherData,\n *\n *   // Required fields.\n *   id: `a-node-id`,\n *   parent: `the-id-of-the-parent-node`, // or null if it's a source node without a parent\n *   children: [],\n *   internal: {\n *     type: `CoolServiceMarkdownField`,\n *     contentDigest: crypto\n *       .createHash(`md5`)\n *       .update(JSON.stringify(fieldData))\n *       .digest(`hex`),\n *     mediaType: `text/markdown`, // optional\n *     content: JSON.stringify(fieldData), // optional\n *     description: `Cool Service: \"Title of entry\"`, // optional\n *   }\n * })\n */\nconst createNode = (\n  node: any,\n  // @ts-ignore\n  plugin?: Plugin,\n  // @ts-ignore\n  actionOptions: ActionOptions = {}\n) => {\n  if (!_.isObject(node)) {\n    return console.log(\n      chalk.bold.red(\n        `The node passed to the \"createNode\" action creator must be an object`\n      )\n    )\n  }\n\n  // Ensure the new node has an internals object.\n  // @ts-ignore\n  if (!node.internal) {\n    // @ts-ignore\n    node.internal = {}\n  }\n\n  // Ensure the new node has a children array.\n  // @ts-ignore\n  if (!node.array && !_.isArray(node.children)) {\n    // @ts-ignore\n    node.children = []\n  }\n\n  // Ensure the new node has a parent field\n  // @ts-ignore\n  if (!node.parent) {\n    // @ts-ignore\n    node.parent = null\n  }\n\n  // Tell user not to set the owner name themself.\n  // @ts-ignore\n  if (node.internal.owner) {\n    reporter.error(JSON.stringify(node, null, 4))\n    reporter.panic(\n      chalk.bold.red(\n        `The node internal.owner field is set automatically by Gatsby and not by plugins`\n      )\n    )\n  }\n\n  const trackParams = {}\n  // Add the plugin name to the internal object.\n  if (plugin) {\n    // @ts-ignore\n    node.internal.owner = plugin.name\n    // @ts-ignore\n    trackParams[`pluginName`] = `${plugin.name}@${plugin.version}`\n  }\n\n  // trackCli(`CREATE_NODE`, trackParams, { debounce: true })\n\n  // const result = nodeSchema.validate(node)\n  // if (result.error) {\n  //   if (!hasErroredBecauseOfNodeValidation.has(result.error.message)) {\n  //     const errorObj = {\n  //       id: `11467`,\n  //       context: {\n  //         validationErrorMessage: result.error.message,\n  //         node,\n  //       },\n  //     }\n\n  //     const possiblyCodeFrame = getNonGatsbyCodeFrame()\n  //     if (possiblyCodeFrame) {\n  //       errorObj.context.codeFrame = possiblyCodeFrame.codeFrame\n  //       errorObj.filePath = possiblyCodeFrame.fileName\n  //       errorObj.location = {\n  //         start: {\n  //           line: possiblyCodeFrame.line,\n  //           column: possiblyCodeFrame.column,\n  //         },\n  //       }\n  //     }\n\n  //     reporter.error(errorObj)\n  //     hasErroredBecauseOfNodeValidation.add(result.error.message)\n  //   }\n\n  //   return { type: `VALIDATION_ERROR`, error: true }\n  // }\n\n  // Ensure node isn't directly setting fields.\n  // @ts-ignore\n  if (node.fields) {\n    throw new Error(\n      stripIndent`\n      Plugins creating nodes can not set data on the reserved field \"fields\"\n      as this is reserved for plugins which wish to extend your nodes.\n\n      If your plugin didn't add \"fields\" you're probably seeing this\n      error because you're reusing an old node object.\n\n      Node:\n\n      ${JSON.stringify(node, null, 4)}\n\n      Plugin that created the node:\n\n      ${JSON.stringify(plugin, null, 4)}\n    `\n    )\n  }\n\n  // @ts-ignore\n  node = sanitizeNode(node)\n\n  const oldNode = getNode(node.id)\n\n  if (actionOptions.parentSpan) {\n    // @ts-ignore\n    actionOptions.parentSpan.setTag(`nodeId`, node.id)\n    // @ts-ignore\n    actionOptions.parentSpan.setTag(`nodeType`, node.id)\n  }\n\n  let deleteActions\n  let updateNodeAction\n  // Check if the node has already been processed.\n  if (oldNode && !hasNodeChanged(node.id, node.internal.contentDigest)) {\n    updateNodeAction = {\n      ...actionOptions,\n      plugin,\n      type: `TOUCH_NODE`,\n      payload: node.id,\n      typeName: node.internal.type,\n    }\n  } else {\n    // Remove any previously created descendant nodes as they're all due\n    // to be recreated.\n    if (oldNode) {\n      const createDeleteAction = node => {\n        return {\n          ...actionOptions,\n          type: `DELETE_NODE`,\n          plugin,\n          payload: node,\n          isRecursiveChildrenDelete: true,\n        }\n      }\n      deleteActions = findChildren(oldNode.children)\n        .map(getNode)\n        .map(createDeleteAction)\n    }\n\n    node.internal.counter = getNextNodeCounter()\n\n    updateNodeAction = {\n      ...actionOptions,\n      type: `CREATE_NODE`,\n      plugin,\n      oldNode,\n      payload: node,\n    }\n  }\n\n  if (deleteActions && deleteActions.length) {\n    return [...deleteActions, updateNodeAction]\n  } else {\n    return updateNodeAction\n  }\n}\n// @ts-ignore\nactions.createNode =\n  (...args) =>\n  dispatch => {\n    // @ts-ignore\n    const actions = createNode(...args)\n\n    dispatch(actions)\n    const createNodeAction = (\n      Array.isArray(actions) ? actions : [actions]\n    ).find(action => action.type === `CREATE_NODE`)\n\n    if (!createNodeAction) {\n      return Promise.resolve(undefined)\n    }\n\n    const { payload: node, traceId, parentSpan } = createNodeAction\n    const maybePromise = apiRunnerNode(`onCreateNode`, {\n      node: wrapNode(node),\n      traceId,\n      parentSpan,\n      traceTags: { nodeId: node.id, nodeType: node.internal.type },\n    })\n\n    if (maybePromise?.then) {\n      return maybePromise.then(res =>\n        getDataStore()\n          .ready()\n          .then(() => res)\n      )\n    } else {\n      return getDataStore()\n        .ready()\n        .then(() => maybePromise)\n    }\n  }\n\n/**\n * \"Touch\" a node. Tells Gatsby a node still exists and shouldn't\n * be garbage collected. Primarily useful for source plugins fetching\n * nodes from a remote system that can return only nodes that have\n * updated. The source plugin then touches all the nodes that haven't\n * updated but still exist so Gatsby knows to keep them.\n * @param {Object} node A node object. See the \"createNode\" action for more information about the node object details.\n * @example\n * touchNode(node)\n */\n// @ts-ignore\nactions.touchNode = (node: any, plugin?: Plugin) => {\n  const nodeId = node?.id\n\n  if (!nodeId) {\n    // if we don't have a node id, we don't want to dispatch this action\n    return []\n  }\n\n  return {\n    type: `TOUCH_NODE`,\n    plugin,\n    payload: nodeId,\n    typeName: node.internal.type,\n  }\n}\n\ninterface CreateNodeInput {\n  node: Record<string, unknown>\n  name?: string\n  value: any\n}\n/**\n * Extend another node. The new node field is placed under the `fields`\n * key on the extended node object.\n *\n * Once a plugin has claimed a field name the field name can't be used by\n * other plugins.  Also since nodes are immutable, you can't mutate the node\n * directly. So to extend another node, use this.\n * @param {Object} $0\n * @param {Object} $0.node the target node object\n * @param {string} $0.name the name for the field\n * @param {any} $0.value the value for the field\n * @example\n * createNodeField({\n *   node,\n *   name: `happiness`,\n *   value: `is sweet graphql queries`\n * })\n *\n * // The field value is now accessible at node.fields.happiness\n */\n// @ts-ignore\nactions.createNodeField = (\n  { node, name, value }: CreateNodeInput,\n  plugin: Plugin,\n  actionOptions?: ActionOptions\n) => {\n  // Ensure required fields are set.\n  // @ts-ignore\n  if (!node.internal.fieldOwners) {\n    // @ts-ignore\n    node.internal.fieldOwners = {}\n  }\n  // @ts-ignore\n  if (!node.fields) {\n    // @ts-ignore\n    node.fields = {}\n  }\n\n  // Normalized name of the field that will be used in schema\n  const schemaFieldName = _.includes(name, `___NODE`)\n    ? // @ts-ignore\n      name.split(`___`)[0]\n    : name\n\n  // Check that this field isn't owned by another plugin.\n  // @ts-ignore\n  const fieldOwner = node.internal.fieldOwners[schemaFieldName]\n  if (fieldOwner && fieldOwner !== plugin.name) {\n    throw new Error(\n      stripIndent`\n      A plugin tried to update a node field that it doesn't own:\n\n      Node id: ${\n        // @ts-ignore\n        node.id\n      }\n      Plugin: ${plugin.name}\n      name: ${name}\n      value: ${value}\n      `\n    )\n  }\n\n  // Update node\n  // @ts-ignore\n  node.fields[name] = value\n  // @ts-ignore\n  node.internal.fieldOwners[schemaFieldName] = plugin.name\n  // @ts-ignore\n  node = sanitizeNode(node)\n\n  return {\n    ...actionOptions,\n    type: `ADD_FIELD_TO_NODE`,\n    plugin,\n    payload: node,\n    addedField: name,\n  }\n}\n\n/**\n * Creates a link between a parent and child node. This is used when you\n * transform content from a node creating a new child node. You need to add\n * this new child node to the `children` array of the parent but since you\n * don't have direct access to the immutable parent node, use this action\n * instead.\n * @param {Object} $0\n * @param {Object} $0.parent the parent node object\n * @param {Object} $0.child the child node object\n * @example\n * createParentChildLink({ parent: parentNode, child: childNode })\n */\n// @ts-ignore\nactions.createParentChildLink = (\n  { parent, child }: { parent: any; child: any },\n  plugin?: Plugin\n) => {\n  if (!parent.children.includes(child.id)) {\n    parent.children.push(child.id)\n  }\n\n  return {\n    type: `ADD_CHILD_NODE_TO_PARENT_NODE`,\n    plugin,\n    payload: parent,\n  }\n}\n\n/**\n * Set top-level Babel options. Plugins and presets will be ignored. Use\n * setBabelPlugin and setBabelPreset for this.\n * @param {Object} config An options object in the shape of a normal babelrc JavaScript object\n * @example\n * setBabelOptions({\n *   options: {\n *     sourceMaps: `inline`,\n *   }\n * })\n */\n// @ts-ignore\nactions.setBabelOptions = (\n  options: Record<string, unknown>,\n  plugin?: Plugin\n) => {\n  // Validate\n  let name = `The plugin \"${\n    // @ts-ignore\n    plugin.name\n  }\"`\n  if (plugin?.name === `default-site-plugin`) {\n    name = `Your site's \"gatsby-node.js\"`\n  }\n  if (!_.isObject(options)) {\n    console.log(`${name} must pass an object to \"setBabelOptions\"`)\n    console.log(JSON.stringify(options, null, 4))\n    if (isNotTestEnv) {\n      process.exit(1)\n    }\n  }\n\n  // @ts-ignore\n  if (!_.isObject(options.options)) {\n    console.log(`${name} must pass options to \"setBabelOptions\"`)\n    console.log(JSON.stringify(options, null, 4))\n    if (isNotTestEnv) {\n      process.exit(1)\n    }\n  }\n\n  return {\n    type: `SET_BABEL_OPTIONS`,\n    plugin,\n    payload: options,\n  }\n}\n\n/**\n * Add new plugins or merge options into existing Babel plugins.\n * @param {Object} config A config object describing the Babel plugin to be added.\n * @param {string} config.name The name of the Babel plugin\n * @param {Object} config.options Options to pass to the Babel plugin.\n * @example\n * setBabelPlugin({\n *   name:  `@emotion/babel-plugin`,\n *   options: {\n *     sourceMap: true,\n *   },\n * })\n */\n// @ts-ignore\nactions.setBabelPlugin = (config: Record<string, unknown>, plugin?: Plugin) => {\n  // Validate\n  let name = `The plugin \"${plugin?.name || `unknown`}\"`\n  if (plugin?.name === `default-site-plugin`) {\n    name = `Your site's \"gatsby-node.js\"`\n  }\n  // @ts-ignore\n  if (!config.name) {\n    console.log(`${name} must set the name of the Babel plugin`)\n    console.log(JSON.stringify(config, null, 4))\n    if (isNotTestEnv) {\n      process.exit(1)\n    }\n  }\n  // @ts-ignore\n  if (!config.options) {\n    // @ts-ignore\n    config.options = {}\n  }\n  return {\n    type: `SET_BABEL_PLUGIN`,\n    plugin,\n    payload: config,\n  }\n}\n\n/**\n * DEPRECATED. Use createJobV2 instead.\n *\n * Create a \"job\". This is a long-running process that is generally\n * started as a side-effect to a GraphQL query.\n * [`gatsby-plugin-sharp`](/plugins/gatsby-plugin-sharp/) uses this for\n * example.\n *\n * Gatsby doesn't finish its process until all jobs are ended.\n * @param {Object} job A job object with at least an id set\n * @param {id} job.id The id of the job\n * @deprecated Use \"createJobV2\" instead\n * @example\n * createJob({ id: `write file id: 123`, fileName: `something.jpeg` })\n */\n// @ts-ignore\nactions.createJob = (job: Job, plugin?: Plugin = null) => {\n  let msg = `Action \"createJob\" is deprecated. Please use \"createJobV2\" instead`\n\n  if (plugin?.name) {\n    msg = msg + ` (called by ${plugin.name})`\n  }\n  reportOnce(msg)\n\n  return {\n    type: `CREATE_JOB`,\n    plugin,\n    payload: job,\n  }\n}\n\n/**\n * Create a \"job\". This is a long-running process that is generally\n * started as a side-effect to a GraphQL query.\n * [`gatsby-plugin-sharp`](/plugins/gatsby-plugin-sharp/) uses this for\n * example.\n *\n * Gatsby doesn't finish its process until all jobs are ended.\n * @param {Object} job A job object with name, inputPaths, outputDir and args\n * @param {string} job.name The name of the job you want to execute\n * @param {string[]} job.inputPaths The inputPaths that are needed to run\n * @param {string} job.outputDir The directory where all files are being saved to\n * @param {Object} job.args The arguments the job needs to execute\n * @returns {Promise<object>} Promise to see if the job is done executing\n * @example\n * createJobV2({ name: `IMAGE_PROCESSING`, inputPaths: [`something.jpeg`], outputDir: `public/static`, args: { width: 100, height: 100 } })\n */\n// @ts-ignore\nactions.createJobV2 = (job: JobV2, plugin: Plugin) => (dispatch, getState) => {\n  // @ts-ignore\n  const internalJob = createInternalJob(job, plugin)\n\n  return createJobV2FromInternalJob(internalJob)(dispatch, getState)\n}\n\n// @ts-ignore\nactions.addGatsbyImageSourceUrl = (sourceUrl: string) => {\n  return {\n    type: `PROCESS_GATSBY_IMAGE_SOURCE_URL`,\n    payload: { sourceUrl },\n  }\n}\n\n/**\n * DEPRECATED. Use createJobV2 instead.\n *\n * Set (update) a \"job\". Sometimes on really long running jobs you want\n * to update the job as it continues.\n *\n * @param {Object} job A job object with at least an id set\n * @param {id} job.id The id of the job\n * @deprecated Use \"createJobV2\" instead\n * @example\n * setJob({ id: `write file id: 123`, progress: 50 })\n */\n// @ts-ignore\nactions.setJob = (job: Job, plugin?: Plugin = null) => {\n  let msg = `Action \"setJob\" is deprecated. Please use \"createJobV2\" instead`\n\n  if (plugin?.name) {\n    msg = msg + ` (called by ${plugin.name})`\n  }\n  reportOnce(msg)\n\n  return {\n    type: `SET_JOB`,\n    plugin,\n    payload: job,\n  }\n}\n\n/**\n * DEPRECATED. Use createJobV2 instead.\n *\n * End a \"job\".\n *\n * Gatsby doesn't finish its process until all jobs are ended.\n * @param {Object} job  A job object with at least an id set\n * @param {id} job.id The id of the job\n * @deprecated Use \"createJobV2\" instead\n * @example\n * endJob({ id: `write file id: 123` })\n */\n// @ts-ignore\nactions.endJob = (job: Job, plugin?: Plugin = null) => {\n  let msg = `Action \"endJob\" is deprecated. Please use \"createJobV2\" instead`\n\n  if (plugin?.name) {\n    msg = msg + ` (called by ${plugin.name})`\n  }\n  reportOnce(msg)\n\n  return {\n    type: `END_JOB`,\n    plugin,\n    payload: job,\n  }\n}\n\n/**\n * Set plugin status. A plugin can use this to save status keys e.g. the last\n * it fetched something. These values are persisted between runs of Gatsby.\n *\n * @param {Object} status  An object with arbitrary values set\n * @example\n * setPluginStatus({ lastFetched: Date.now() })\n */\n// @ts-ignore\nactions.setPluginStatus = (status: { [key: string]: any }, plugin: Plugin) => {\n  return {\n    type: `SET_PLUGIN_STATUS`,\n    plugin,\n    payload: status,\n  }\n}\n\n/**\n * Creates an individual node manifest.\n * This is used to tie the unique revision state within a data source at the current point in time to a page generated from the provided node when it's node manifest is processed.\n *\n * @param {Object} manifest Manifest data\n * @param {string} manifest.manifestId An id which ties the unique revision state of this manifest to the unique revision state of a data source.\n * @param {Object} manifest.node The Gatsby node to tie the manifestId to. See the \"createNode\" action for more information about the node object details.\n * @param {string} manifest.updatedAtUTC (optional) The time in which the node was last updated. If this parameter is not included, a manifest is created for every node that gets called. By default, node manifests are created for content updated in the last 30 days. To change this, set a `NODE_MANIFEST_MAX_DAYS_OLD` environment variable.\n * @example\n * unstable_createNodeManifest({\n *   manifestId: `post-id-1--updated-53154315`,\n *   updatedAtUTC: `2021-07-08T21:52:28.791+01:00`,\n *   node: {\n *      id: `post-id-1`\n *   },\n * })\n */\n// @ts-ignore\nactions.unstable_createNodeManifest = (\n  { manifestId, node, updatedAtUTC },\n  plugin: Plugin\n) => {\n  return {\n    type: `CREATE_NODE_MANIFEST`,\n    payload: {\n      manifestId,\n      node,\n      pluginName: plugin.name,\n      updatedAtUTC,\n    },\n  }\n}\n\n/**\n * Marks a source plugin as \"stateful\" which disables automatically deleting untouched nodes. Stateful source plugins manage deleting their own nodes without stale node checks in Gatsby.\n * Enabling this is a major performance improvement for source plugins that manage their own node deletion. It also lowers the total memory required by a source plugin.\n * When using this action, check if it's supported first with `hasFeature('stateful-source-nodes')`, `hasFeature` is exported from `content-engine/dist/plugin-utils`.\n *\n * @example\n * import { hasFeature } from \"content-engine/dist/plugin-utils\"\n *\n * exports.sourceNodes = ({ actions }) => {\n *    if (hasFeature(`stateful-source-nodes`)) {\n *      actions.enableStatefulSourceNodes()\n *    } else {\n *     // fallback to old behavior where all nodes are iterated on and touchNode is called.\n *    }\n * }\n *\n * @param {void} $0\n */\n// @ts-ignore\nactions.enableStatefulSourceNodes = (plugin: Plugin) => {\n  return {\n    type: `ENABLE_STATEFUL_SOURCE_PLUGIN`,\n    plugin,\n  }\n}\n\n/**\n * Stores request headers for a given domain to be later used when making requests for Image CDN (and potentially other features).\n *\n * @param {Object} $0\n * @param {string} $0.domain The domain to store the headers for.\n * @param {Object} $0.headers The headers to store.\n */\n// @ts-ignore\nactions.setRequestHeaders = ({ domain, headers }, plugin: Plugin) => {\n  const headersIsObject =\n    typeof headers === `object` && headers !== null && !Array.isArray(headers)\n\n  const noHeaders = !headersIsObject\n  const noDomain = typeof domain !== `string`\n\n  if (noHeaders) {\n    reporter.warn(\n      `Plugin ${plugin.name} called actions.setRequestHeaders with a headers property that isn't an object.`\n    )\n  }\n\n  if (noDomain) {\n    reporter.warn(\n      `Plugin ${plugin.name} called actions.setRequestHeaders with a domain property that isn't a string.`\n    )\n  }\n\n  if (noDomain || noHeaders) {\n    reporter.panic(\n      `Plugin ${plugin.name} attempted to set request headers with invalid arguments. See above warnings for more info.`\n    )\n\n    return null\n  }\n\n  const baseDomain = url.parse(domain)?.hostname\n\n  if (baseDomain) {\n    return {\n      type: `SET_REQUEST_HEADERS`,\n      payload: {\n        domain: baseDomain,\n        headers,\n      },\n    }\n  } else {\n    reporter.panic(\n      `Plugin ${plugin.name} attempted to set request headers for a domain that is not a valid URL. (${domain})`\n    )\n\n    return null\n  }\n}\n\nexport { actions }\n"],"mappings":";;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAIA;AAVA;;AAEA;AACA;;AAKA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAM,MAAK;AAIpD,MAAMC,OAAO,GAAG,CAAC,CAAC;AAAA;AAElB,MAAMC,YAAY,GAAGC,eAAe,IAAI;EACtC,MAAMC,QAAQ,GAAG,CAAC,GAAGD,eAAe,CAAC;EACrC,MAAME,KAAK,GAAG,CAAC,GAAGF,eAAe,CAAC;EAClC,MAAMG,cAAc,GAAG,IAAIC,GAAG,EAAE;EAEhC,OAAOF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;IACvB,MAAMC,YAAY,GAAG,IAAAC,kBAAO,EAACL,KAAK,CAACM,GAAG,EAAE,CAAC;IACzC,IAAI,CAACF,YAAY,IAAIH,cAAc,CAACM,GAAG,CAACH,YAAY,CAACI,EAAE,CAAC,EAAE;MACxD;IACF;IACAP,cAAc,CAACQ,GAAG,CAACL,YAAY,CAACI,EAAE,CAAC;IACnC,MAAME,WAAW,GAAGN,YAAY,CAACL,QAAQ;IACzC,IAAI,uBAAUW,WAAW,CAAC,IAAIA,WAAW,CAACP,MAAM,GAAG,CAAC,EAAE;MACpDJ,QAAQ,CAACY,IAAI,CAAC,GAAGD,WAAW,CAAC;MAC7BV,KAAK,CAACW,IAAI,CAAC,GAAGD,WAAW,CAAC;IAC5B;EACF;EACA,OAAOX,QAAQ;AACjB,CAAC;AAqBD;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,OAAO,CAACgB,UAAU,GAAG,CAACC,IAAS,EAAEC,MAAe,KAAK;EACnD,MAAMN,EAAE,GAAGK,IAAI,IAAIA,IAAI,CAACL,EAAE;;EAE1B;EACA;EACA,MAAMO,YAAY,GAAG,IAAAV,kBAAO,EAACG,EAAE,CAAC;EAEhC,MAAMQ,kBAAkB,GAAGH,IAAI,IAAI;IACjC,OAAO;MACLI,IAAI,EAAG,aAAY;MACnBH,MAAM;MACNI,OAAO,EAAEL,IAAI;MACb;MACA;MACAM,yBAAyB,EAAEN,IAAI,KAAKE;IACtC,CAAC;EACH,CAAC;EAED,MAAMK,YAAY,GAAGJ,kBAAkB,CAACD,YAAY,CAAC;;EAErD;EACA;EACA,MAAMM,wBAAwB,GAC5BN,YAAY,IACZlB,YAAY,CAACkB,YAAY,CAAChB,QAAQ,CAAC,CAACuB,GAAG,CAACjB,kBAAO,CAAC,CAACiB,GAAG,CAACN,kBAAkB,CAAC;EAE1E,IAAIK,wBAAwB,IAAIA,wBAAwB,CAAClB,MAAM,EAAE;IAC/D,OAAO,CAAC,GAAGkB,wBAAwB,EAAED,YAAY,CAAC;EACpD,CAAC,MAAM;IACL,OAAOA,YAAY;EACrB;AACF,CAAC;;AAED;AACA;AACA,SAASG,kBAAkB,GAAG;EAAA;EAC5B,MAAMC,eAAe,4BAAGC,YAAK,CAACC,QAAQ,EAAE,CAACC,MAAM,CAACC,iBAAiB,yEAAI,CAAC;EACtE,IAAIJ,eAAe,IAAIK,MAAM,CAACC,gBAAgB,EAAE;IAC9C,MAAM,IAAIC,KAAK,CACZ,+DAA8DP,eAAgB,EAAC,CACjF;EACH;EACA,OAAOA,eAAe,GAAG,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,UAAU,GAAG,CACjBnB,IAAS,EAETC,MAAe;AACf;AACAmB,aAA4B,GAAG,CAAC,CAAC,KAC9B;EACH,IAAI,CAAC,wBAAWpB,IAAI,CAAC,EAAE;IACrB,OAAOqB,OAAO,CAACC,GAAG,CAChBC,cAAK,CAACC,IAAI,CAACC,GAAG,CACX,sEAAqE,CACvE,CACF;EACH;;EAEA;EACA;EACA,IAAI,CAACzB,I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"}