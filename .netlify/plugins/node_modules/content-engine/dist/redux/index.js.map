{"version":3,"file":"index.js","names":["gatsbyRedux","requireFromInstalledGatsbyDist","emitter","mett","readState","state","readFromCache","nodes","nodesByType","Map","forEach","node","type","internal","has","set","get","id","e","multi","dispatch","next","action","Array","isArray","filter","Boolean","map","configureStore","initialState","createStore","combineReducers","reducers","applyMiddleware","thunk","store","process","env","GATSBY_WORKER_POOL_WORKER","replaceReducer","customReducers","saveState","getState","writeToCache","typeOwners","statefulSourcePlugins","status","jobsV2","savePartialStateToDisk","keys","transformState","contents","savedContents","loadPartialStateFromDisk","subscribe","lastAction","emit"],"sources":["../../src/redux/index.ts"],"sourcesContent":["import {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  DeepPartial,\n  Middleware,\n  ReducersMapObject,\n  Store,\n} from \"redux\"\nimport _ from \"lodash\"\n// import telemetry from \"gatsby-telemetry\"\n\nimport { mett } from \"../utils/mett\"\nimport thunk, { ThunkMiddleware, ThunkAction, ThunkDispatch } from \"redux-thunk\"\nimport * as reducers from \"./reducers\"\nimport { writeToCache, readFromCache } from \"./persist\"\nimport { IGatsbyState, ActionsUnion, GatsbyStateKeys } from \"./types\"\nimport { requireFromInstalledGatsbyDist } from \"../core-utils/create-require-from-path\"\n\nconst gatsbyRedux = requireFromInstalledGatsbyDist(`redux/index.js`)\n\n// Create event emitter for actions\nexport const emitter = gatsbyRedux?.emitter || mett()\n\n// Read old node data from cache.\nexport const readState =\n  gatsbyRedux?.readState ||\n  ((): IGatsbyState => {\n    try {\n      const state = readFromCache() as IGatsbyState\n      if (state.nodes) {\n        // re-create nodesByType\n        state.nodesByType = new Map()\n        state.nodes.forEach(node => {\n          const { type } = node.internal\n          if (!state.nodesByType.has(type)) {\n            state.nodesByType.set(type, new Map())\n          }\n          // The `.has` and `.set` calls above make this safe\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          state.nodesByType.get(type)!.set(node.id, node)\n        })\n      }\n\n      // jsonDataPaths was removed in the per-page-manifest\n      // changes. Explicitly delete it here to cover case where user\n      // runs gatsby the first time after upgrading.\n      delete state[`jsonDataPaths`]\n\n      // telemetry.trackCli(`CACHE_STATUS`, {\n      //   cacheStatus: `WARM`,\n      // })\n\n      return state\n    } catch (e) {\n      // telemetry.trackCli(`CACHE_STATUS`, {\n      //   cacheStatus: `COLD`,\n      // })\n\n      return {} as IGatsbyState\n    }\n  })\n\nexport interface IMultiDispatch {\n  <T extends ActionsUnion | ThunkAction<any, IGatsbyState, any, ActionsUnion>>(\n    action: Array<T>\n  ): Array<T>\n}\n\n/**\n * Redux middleware handling array of actions\n */\nconst multi: Middleware<IMultiDispatch> =\n  ({ dispatch }) =>\n  next =>\n  (action: ActionsUnion): ActionsUnion | Array<ActionsUnion> =>\n    Array.isArray(action) ? action.filter(Boolean).map(dispatch) : next(action)\n\nexport type GatsbyReduxStore = Store<IGatsbyState> & {\n  dispatch: ThunkDispatch<IGatsbyState, any, ActionsUnion> & IMultiDispatch\n}\n\nexport const configureStore =\n  gatsbyRedux?.configureStore ||\n  ((initialState: IGatsbyState): GatsbyReduxStore =>\n    createStore(\n      combineReducers<IGatsbyState>({ ...reducers }),\n      initialState,\n      applyMiddleware(\n        thunk as ThunkMiddleware<IGatsbyState, ActionsUnion>,\n        multi\n      )\n    ))\n\nexport const store: GatsbyReduxStore =\n  gatsbyRedux?.store ||\n  configureStore(\n    process.env.GATSBY_WORKER_POOL_WORKER ? ({} as IGatsbyState) : readState()\n  )\n\n/**\n * Allows overloading some reducers (e.g. when setting a custom datastore)\n */\nexport const replaceReducer =\n  gatsbyRedux?.replaceReducer ||\n  ((customReducers: Partial<ReducersMapObject<IGatsbyState>>): void => {\n    store.replaceReducer(\n      combineReducers<IGatsbyState>({ ...reducers, ...customReducers })\n    )\n  })\n\n// Persist state.\nexport const saveState =\n  gatsbyRedux?.saveState ||\n  ((): void => {\n    const state = store.getState()\n\n    return writeToCache({\n      nodes: state.nodes,\n      typeOwners: state.typeOwners,\n      statefulSourcePlugins: state.statefulSourcePlugins,\n      status: state.status,\n      jobsV2: state.jobsV2,\n    })\n  })\n\nexport const savePartialStateToDisk =\n  gatsbyRedux?.savePartialStateToDisk ||\n  ((\n    keys: Array<GatsbyStateKeys>,\n    transformState?: <T extends DeepPartial<IGatsbyState>>(state: T) => T\n  ): void => {\n    const state = store.getState()\n    const contents = _.pick(state, keys)\n    const savedContents = transformState ? transformState(contents) : contents\n\n    return writeToCache(savedContents)\n  })\n\nexport const loadPartialStateFromDisk =\n  gatsbyRedux?.loadPartialStateFromDisk ||\n  ((): DeepPartial<IGatsbyState> => {\n    try {\n      return readFromCache() as DeepPartial<IGatsbyState>\n    } catch (e) {\n      // ignore errors.\n    }\n    return {} as IGatsbyState\n  })\n\n// if we're using Gatsby's redux then it will already be emitting the following:\nif (!gatsbyRedux?.emitter) {\n  store.subscribe(() => {\n    const lastAction = store.getState().lastAction\n    emitter.emit(lastAction.type, lastAction)\n  })\n}\n"],"mappings":"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"}