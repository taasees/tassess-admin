{"version":3,"file":"types.js","names":[],"sources":["../../src/services/types.ts"],"sourcesContent":["import { Span } from \"opentracing\"\nimport reporter from \"../reporter\"\nimport { IProgram } from \"../commands/types\"\nimport { Store, AnyAction } from \"redux\"\nimport { IGatsbyState } from \"../redux/types\"\nimport { Express } from \"express\"\nimport { Compiler } from \"webpack\"\n\ntype Reporter = typeof reporter\n\nexport interface IMutationAction {\n  type: string\n  payload: Array<unknown>\n  resolve?: (result: unknown) => void\n}\n\nexport interface IDataLayerContext {\n  reporter: Reporter\n  deferNodeMutation?: boolean\n  nodesMutatedDuringQueryRun?: boolean\n  program: IProgram\n  store?: Store<IGatsbyState, AnyAction>\n  parentSpan?: Span\n  webhookBody?: Record<string, unknown>\n  webhookSourcePluginName?: string\n  refresh?: boolean\n  pagesToBuild?: Array<string>\n  pagesToDelete?: Array<string>\n  shouldRunCreatePagesStatefully?: boolean\n}\n\nexport interface IBuildContext {\n  reporter: Reporter\n  program: IProgram\n  store?: Store<IGatsbyState, AnyAction>\n  parentSpan?: Span\n  webhookBody?: Record<string, unknown>\n  webhookSourcePluginName?: string\n  refresh?: boolean\n  app: Express\n  nodesMutatedDuringQueryRun?: boolean\n  nodesMutatedDuringQueryRunRecompileCount?: number\n  nodeMutationBatch?: Array<IMutationAction>\n  compiler?: Compiler\n  recompiledFiles?: Set<string> // available in \"recompile\" service\n}\n"],"mappings":""}