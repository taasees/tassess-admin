"use strict";

exports.__esModule = true;
exports.setupLmdbStore = setupLmdbStore;
var _lmdbDatastore = require("./lmdb-datastore");
var _redux = require("../../redux");
function setupLmdbStore({
  dbPath
} = {}) {
  const dataStore = (0, _lmdbDatastore.getLmdbStore)({
    dbPath
  });
  (0, _redux.replaceReducer)({
    nodes: (state = new Map(), action) => action.type === `DELETE_CACHE` ? new Map() : state,
    nodesByType: (state = new Map(), action) => action.type === `DELETE_CACHE` ? new Map() : state
  });
  _redux.emitter.on(`*`, action => {
    if (action) {
      var _dataStore$updateData;
      (_dataStore$updateData = dataStore.updateDataStore) === null || _dataStore$updateData === void 0 ? void 0 : _dataStore$updateData.call(dataStore, action);
    }
  });
  return dataStore;
}
//# sourceMappingURL=setup-datastore.js.map