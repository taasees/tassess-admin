{"version":3,"file":"index.js","names":["loadConfig","siteDirectory","providedConfig","config","configFilePath","configFile","getConfigFile","preferDefault","configModule","reporter","panic","id","context","configName","plugins","loadThemes","rootDir","store","dispatch","internalActions","setSiteConfig"],"sources":["../../../src/bootstrap/load-config/index.ts"],"sourcesContent":["import reporter from \"../../reporter\"\n// import telemetry from \"gatsby-telemetry\"\nimport { preferDefault } from \"../prefer-default\"\nimport { getConfigFile } from \"../get-config-file\"\nimport { internalActions } from \"../../redux/actions\"\nimport { loadThemes } from \"../load-themes\"\nimport { store } from \"../../redux\"\nimport { IProgram } from \"../../commands/types\"\nimport { IGatsbyConfig } from \"../../internal\"\nimport { GatsbyConfig } from \"../../types\"\n\nexport async function loadConfig({\n  siteDirectory,\n  providedConfig,\n}: {\n  siteDirectory: string\n  processFlags?: boolean\n  program?: IProgram\n  providedConfig?: GatsbyConfig\n}): Promise<IGatsbyConfig> {\n  let config\n  let configFilePath\n\n  if (providedConfig) {\n    config = providedConfig\n  } else {\n    // Try opening the site's gatsby-config.js file.\n    const configFile = await getConfigFile(siteDirectory, `gatsby-config`)\n\n    configFilePath = configFile.configFilePath\n    config = preferDefault(configFile.configModule)\n  }\n\n  // The root config cannot be exported as a function, only theme configs\n  if (typeof config === `function`) {\n    reporter.panic({\n      id: `10126`,\n      context: {\n        configName: `gatsby-config`,\n        siteDirectory,\n      },\n    })\n  }\n\n  // theme gatsby configs can be functions or objects\n  if (\n    config &&\n    // themes currently don't work when a config object is provided\n    !providedConfig\n  ) {\n    const plugins = await loadThemes(config, {\n      configFilePath,\n      rootDir: siteDirectory,\n    })\n    config = plugins.config\n  }\n\n  store.dispatch(internalActions.setSiteConfig(config))\n\n  return config\n}\n"],"mappings":";;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;;AAUO,eAAeA,UAAU,CAAC;EAC/BC,aAAa;EACbC;AAMF,CAAC,EAA0B;EACzB,IAAIC,MAAM;EACV,IAAIC,cAAc;EAElB,IAAIF,cAAc,EAAE;IAClBC,MAAM,GAAGD,cAAc;EACzB,CAAC,MAAM;IACL;IACA,MAAMG,UAAU,GAAG,MAAM,IAAAC,4BAAa,EAACL,aAAa,EAAG,eAAc,CAAC;IAEtEG,cAAc,GAAGC,UAAU,CAACD,cAAc;IAC1CD,MAAM,GAAG,IAAAI,4BAAa,EAACF,UAAU,CAACG,YAAY,CAAC;EACjD;;EAEA;EACA,IAAI,OAAOL,MAAM,KAAM,UAAS,EAAE;IAChCM,iBAAQ,CAACC,KAAK,CAAC;MACbC,EAAE,EAAG,OAAM;MACXC,OAAO,EAAE;QACPC,UAAU,EAAG,eAAc;QAC3BZ;MACF;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,IACEE,MAAM;EACN;EACA,CAACD,cAAc,EACf;IACA,MAAMY,OAAO,GAAG,MAAM,IAAAC,sBAAU,EAACZ,MAAM,EAAE;MACvCC,cAAc;MACdY,OAAO,EAAEf;IACX,CAAC,CAAC;IACFE,MAAM,GAAGW,OAAO,CAACX,MAAM;EACzB;EAEAc,YAAK,CAACC,QAAQ,CAACC,wBAAe,CAACC,aAAa,CAACjB,MAAM,CAAC,CAAC;EAErD,OAAOA,MAAM;AACf"}