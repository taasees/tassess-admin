{"version":3,"file":"types.js","names":[],"sources":["../../../src/reporter/redux/types.ts"],"sourcesContent":["import { Actions, ActivityStatuses, ActivityTypes } from \"../constants\"\nimport { IStructuredError, ErrorCategory } from \"../../structured-errors/types\"\n\nexport interface IGatsbyCLIState {\n  activities: {\n    [id: string]: IActivity\n  }\n  status: ActivityStatuses | \"\"\n}\n\nexport type ActionsUnion =\n  | ICreateLog\n  | ISetStatus\n  | IEndActivity\n  | IPendingActivity\n  | IStartActivity\n  | ICancelActivity\n  | IUpdateActivity\n  | IActivityErrored\n  | ISetLogs\n\nexport interface IActivity {\n  startTime?: [number, number]\n  id: string\n  uuid: string\n  text: string\n  type: ActivityTypes\n  status: ActivityStatuses\n  statusText: string\n  current?: number\n  total?: number\n  duration?: number\n  errored?: boolean\n}\n\nexport interface ILog {\n  level: string\n  text: string | undefined\n  statusText: string | undefined\n  duration: number | undefined\n  group: string | undefined\n  code: string | undefined\n  type: string | undefined\n  category?: keyof typeof ErrorCategory\n  filePath: string | undefined\n  location: IStructuredError[\"location\"] | undefined\n  docsUrl: string | undefined\n  context: string | undefined\n  activity_current: number | undefined\n  activity_total: number | undefined\n  activity_type: string | undefined\n  activity_uuid: string | undefined\n  timestamp: string\n  stack: IStructuredError[\"stack\"] | undefined\n  pluginName: string | undefined\n}\n\nexport interface ICreateLog {\n  type: Actions.Log\n  payload: ILog\n}\n\nexport interface ISetStatus {\n  type: Actions.SetStatus\n  payload: ActivityStatuses | \"\"\n}\n\nexport interface IPendingActivity {\n  type: Actions.PendingActivity\n  payload: {\n    id: string\n    type: ActivityTypes\n    status: ActivityStatuses\n    startTime?: [number, number]\n  }\n}\n\nexport interface IStartActivity {\n  type: Actions.StartActivity\n  payload: IActivity\n}\n\nexport interface ICancelActivity {\n  type: Actions.CancelActivity\n  payload: {\n    id: string\n    status: ActivityStatuses.Cancelled\n    duration: number\n    type: ActivityTypes\n  }\n}\n\nexport interface IEndActivity {\n  type: Actions.EndActivity\n  payload: {\n    uuid: string\n    id: string\n    status: ActivityStatuses\n    duration: number\n    type: ActivityTypes\n  }\n}\n\nexport interface IUpdateActivity {\n  type: Actions.UpdateActivity\n  payload: {\n    uuid: string\n    id: string\n    statusText?: string\n    total?: number\n    current?: number\n  }\n}\n\nexport interface IActivityErrored {\n  type: Actions.ActivityErrored\n  payload: {\n    id: string\n  }\n}\n\nexport interface ISetLogs {\n  type: Actions.SetLogs\n  payload: IGatsbyCLIState\n}\n"],"mappings":""}