{"version":3,"file":"diagnostics.js","names":["calculateTimeoutDelay","envVarValue","defaultValue","min","parsedToNumber","parseInt","isNaN","Math","max","FIVE_MINUTES","FIVE_SECONDS","TEN_MINUTES","TEN_SECONDS","additionalDiagnosticOutputHandlers","registerAdditionalDiagnosticOutputHandler","handler","push","generateAdditionalOutput","extraMessages","msg","length","join","createStructuredLoggingDiagnosticsMiddleware","getStore","stuckStatusDiagnosticTimeoutDelay","process","env","GATSBY_DIAGNOSTIC_STUCK_STATUS_TIMEOUT","stuckStatusWatchdogTimeoutDelay","GATSBY_WATCHDOG_STUCK_STATUS_TIMEOUT","displayedStuckStatusDiagnosticWarning","displayingStuckStatusDiagnosticWarning","stuckStatusDiagnosticTimer","stuckStatusWatchdogTimer","reporter","inProgressActivities","activities","getState","logs","Object","values","filter","activity","isActivityInProgress","status","map","startTime","diagnostics_elapsed_seconds","calcElapsedTime","generateStuckStatusDiagnosticMessage","text","type","diagnosticMiddleware","action","currentStatus","require","clearTimeout","nextTick","activitiesDiagnosticsMessage","warn","JSON","stringify","ActivityStatuses","InProgress","setTimeout","logStuckStatusDiagnostic","toFixed","fatalStuckStatusHandler","panic","id","context","stuckStatusDiagnosticMessage","additionalOutput"],"sources":["../../../src/reporter/redux/diagnostics.ts"],"sourcesContent":["import { ActionsUnion, IActivity } from \"./types\"\nimport { ActivityStatuses } from \"../constants\"\nimport { calcElapsedTime } from \"../util/calc-elapsed-time\"\nimport { isActivityInProgress } from \"./utils\"\nimport type { Reporter } from \"../reporter\"\nimport type { GatsbyCLIStore } from \".\"\n\nfunction calculateTimeoutDelay(\n  envVarValue: string | undefined,\n  defaultValue: number,\n  min: number\n): number {\n  if (!envVarValue) {\n    return 0\n  } else if (envVarValue === `1`) {\n    // Toggling env vars with \"1\" is quite common - because we allow to set\n    // specific timeout values with env var, this special case is added\n    // (1ms timeout makes little sense - that's too low value to be used as-is)\n    return defaultValue\n  }\n\n  const parsedToNumber = parseInt(envVarValue, 10)\n  if (isNaN(parsedToNumber)) {\n    // It's truthy, but not a number - let's enable it with default value\n    return defaultValue\n  }\n\n  // Allow to custom specific timeout value, but also put some minimal\n  // timeout bound as there is little usefulness of setting it to\n  // something less than few seconds.\n  return Math.max(parsedToNumber, min)\n}\n\ntype DiagnosticsMiddleware = (action: ActionsUnion) => void\n\nconst FIVE_MINUTES = 1000 * 60 * 5\nconst FIVE_SECONDS = 1000 * 5\nconst TEN_MINUTES = 1000 * 60 * 10\nconst TEN_SECONDS = 1000 * 10\n\nexport type AdditionalDiagnosticsOutputHandler = () => string\nconst additionalDiagnosticOutputHandlers: Array<AdditionalDiagnosticsOutputHandler> =\n  []\n\nexport function registerAdditionalDiagnosticOutputHandler(\n  handler: AdditionalDiagnosticsOutputHandler\n): void {\n  additionalDiagnosticOutputHandlers.push(handler)\n}\n\nfunction generateAdditionalOutput(): string {\n  const extraMessages: Array<string> = []\n\n  for (const handler of additionalDiagnosticOutputHandlers) {\n    const msg = handler()\n\n    if (msg) {\n      extraMessages.push(msg)\n    }\n  }\n\n  return extraMessages.length > 0\n    ? `\\n\\nAdditional debugging logs:\\n\\n${extraMessages.join(`\\n\\n`)}`\n    : ``\n}\n\nexport function createStructuredLoggingDiagnosticsMiddleware(\n  getStore: () => GatsbyCLIStore\n): DiagnosticsMiddleware {\n  const stuckStatusDiagnosticTimeoutDelay = calculateTimeoutDelay(\n    process.env.GATSBY_DIAGNOSTIC_STUCK_STATUS_TIMEOUT,\n    FIVE_MINUTES, // default timeout\n    FIVE_SECONDS // minimal timeout (this is mostly useful for debugging diagnostic code itself)\n  )\n\n  const stuckStatusWatchdogTimeoutDelay = calculateTimeoutDelay(\n    process.env.GATSBY_WATCHDOG_STUCK_STATUS_TIMEOUT,\n    TEN_MINUTES, // default timeout\n    TEN_SECONDS // minimal timeout (this is mostly useful for debugging diagnostic code itself)\n  )\n\n  if (!stuckStatusDiagnosticTimeoutDelay && !stuckStatusWatchdogTimeoutDelay) {\n    // none of timers are enabled, so this is no-op middleware\n    return (): void => {}\n  }\n\n  let displayedStuckStatusDiagnosticWarning = false\n  let displayingStuckStatusDiagnosticWarning = false\n  let stuckStatusDiagnosticTimer: NodeJS.Timeout | null = null\n  let stuckStatusWatchdogTimer: NodeJS.Timeout | null = null\n  let reporter: Reporter\n\n  function inProgressActivities(): Array<\n    IActivity & { diagnostics_elapsed_seconds?: string }\n  > {\n    const { activities } = getStore().getState().logs\n    return Object.values(activities)\n      .filter(activity => isActivityInProgress(activity.status))\n      .map(activity => {\n        if (!activity.startTime) {\n          return activity\n        }\n\n        return {\n          ...activity,\n          diagnostics_elapsed_seconds: calcElapsedTime(activity.startTime),\n        }\n      })\n  }\n\n  function generateStuckStatusDiagnosticMessage(): string {\n    const activities = inProgressActivities()\n    return Object.values(activities)\n      .map(\n        activity =>\n          `- Activity \"${activity.text}\" of type \"${activity.type}\" is currently in state \"${activity.status}\"`\n      )\n      .join(`\\n`)\n  }\n\n  return function diagnosticMiddleware(action: ActionsUnion): void {\n    // ignore diagnostic logs, otherwise diagnostic message itself will reset\n    // the timers\n    if (!displayingStuckStatusDiagnosticWarning) {\n      const currentStatus = getStore().getState().logs.status\n\n      if (!reporter) {\n        // yuck, we have situation of circular dependencies here\n        // so this `reporter` import is delayed until it's actually needed\n        reporter = require(`../reporter`).reporter\n      }\n\n      if (stuckStatusDiagnosticTimeoutDelay) {\n        if (stuckStatusDiagnosticTimer) {\n          clearTimeout(stuckStatusDiagnosticTimer)\n          stuckStatusDiagnosticTimer = null\n        }\n\n        if (displayedStuckStatusDiagnosticWarning) {\n          // using nextTick here to prevent infinite recursion (report.warn would\n          // result in another call of this function and so on)\n          process.nextTick(() => {\n            const activitiesDiagnosticsMessage =\n              generateStuckStatusDiagnosticMessage()\n            reporter.warn(\n              `This is just diagnostic information (enabled by GATSBY_DIAGNOSTIC_STUCK_STATUS_TIMEOUT):\\n\\nThere was activity since last diagnostic message. Log action:\\n\\n${JSON.stringify(\n                action,\n                null,\n                2\n              )}\\n\\nCurrently Gatsby is in: \"${\n                getStore().getState().logs.status\n              }\" state.${\n                activitiesDiagnosticsMessage.length > 0\n                  ? `\\n\\nActivities preventing Gatsby from transitioning to idle state:\\n\\n${activitiesDiagnosticsMessage}`\n                  : ``\n              }`\n            )\n          })\n          displayedStuckStatusDiagnosticWarning = false\n        }\n\n        if (currentStatus === ActivityStatuses.InProgress) {\n          stuckStatusDiagnosticTimer = setTimeout(\n            function logStuckStatusDiagnostic() {\n              displayingStuckStatusDiagnosticWarning = true\n              reporter.warn(\n                `This is just diagnostic information (enabled by GATSBY_DIAGNOSTIC_STUCK_STATUS_TIMEOUT):\\n\\nGatsby is in \"${\n                  getStore().getState().logs.status\n                }\" state without any updates for ${(\n                  stuckStatusDiagnosticTimeoutDelay / 1000\n                ).toFixed(\n                  3\n                )} seconds. Activities preventing Gatsby from transitioning to idle state:\\n\\n${generateStuckStatusDiagnosticMessage()}${\n                  stuckStatusWatchdogTimeoutDelay\n                    ? `\\n\\nProcess will be terminated in ${(\n                        (stuckStatusWatchdogTimeoutDelay -\n                          stuckStatusDiagnosticTimeoutDelay) /\n                        1000\n                      ).toFixed(3)} seconds if nothing will change.`\n                    : ``\n                }${generateAdditionalOutput()}`\n              )\n              displayingStuckStatusDiagnosticWarning = false\n              displayedStuckStatusDiagnosticWarning = true\n            },\n            stuckStatusDiagnosticTimeoutDelay\n          )\n        }\n      }\n\n      if (stuckStatusWatchdogTimeoutDelay) {\n        if (stuckStatusWatchdogTimer) {\n          clearTimeout(stuckStatusWatchdogTimer)\n          stuckStatusWatchdogTimer = null\n        }\n\n        if (currentStatus === ActivityStatuses.InProgress) {\n          stuckStatusWatchdogTimer = setTimeout(\n            function fatalStuckStatusHandler() {\n              reporter.panic({\n                id: `11701`,\n                context: {\n                  activities: inProgressActivities(),\n                  status: getStore().getState().logs.status,\n                  stuckStatusDiagnosticMessage:\n                    generateStuckStatusDiagnosticMessage(),\n                  stuckStatusWatchdogTimeoutDelay,\n                  additionalOutput: generateAdditionalOutput(),\n                },\n              })\n            },\n            stuckStatusWatchdogTimeoutDelay\n          )\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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"}