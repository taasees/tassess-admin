{"version":3,"file":"reporter-progress.js","names":["createProgressReporter","id","text","start","total","span","reporter","reporterActions","pluginName","lastUpdateTime","unflushedProgress","unflushedTotal","progressUpdateDelay","Math","round","updateProgress","forced","t","Date","now","setActivityTotal","activityTick","increment","startActivity","type","ActivityTypes","Progress","current","setStatus","statusText","setActivityStatusText","tick","panicOnBuild","errorMeta","error","finish","setActivityErrored","panic","endActivity","status","ActivityStatuses","Failed","end","Success","done","value"],"sources":["../../src/reporter/reporter-progress.ts"],"sourcesContent":["import * as reporterActionsForTypes from \"./redux/actions\"\nimport { ActivityStatuses, ActivityTypes } from \"./constants\"\nimport { Span } from \"opentracing\"\nimport { reporter as gatsbyReporter } from \"./reporter\"\nimport { IStructuredError } from \"../structured-errors/types\"\nimport { ErrorMeta } from \"./types\"\n\ninterface ICreateProgressReporterArguments {\n  id: string\n  text: string\n  start: number\n  total: number\n  span: Span\n  reporter: typeof gatsbyReporter\n  reporterActions: typeof reporterActionsForTypes\n  pluginName?: string\n}\n\nexport interface IProgressReporter {\n  start(): void\n  setStatus(statusText: string): void\n  tick(increment?: number): void\n  panicOnBuild(\n    errorMeta: ErrorMeta,\n    error?: Error | Array<Error>\n  ): IStructuredError | Array<IStructuredError>\n  panic(errorMeta: ErrorMeta, error?: Error | Array<Error>): never\n  end(): void\n  done(): void\n  total: number\n  span: Span\n}\n\nexport const createProgressReporter = ({\n  id,\n  text,\n  start,\n  total,\n  span,\n  reporter,\n  reporterActions,\n  pluginName,\n}: ICreateProgressReporterArguments): IProgressReporter => {\n  let lastUpdateTime = 0\n  let unflushedProgress = 0\n  let unflushedTotal = 0\n  const progressUpdateDelay = Math.round(1000 / 10) // 10 fps *shrug*\n\n  const updateProgress = (forced: boolean = false): void => {\n    const t = Date.now()\n    if (!forced && t - lastUpdateTime <= progressUpdateDelay) return\n\n    if (unflushedTotal > 0) {\n      reporterActions.setActivityTotal({ id, total: unflushedTotal })\n      unflushedTotal = 0\n    }\n    if (unflushedProgress > 0) {\n      reporterActions.activityTick({ id, increment: unflushedProgress })\n      unflushedProgress = 0\n    }\n    lastUpdateTime = t\n  }\n\n  return {\n    start(): void {\n      reporterActions.startActivity({\n        id,\n        text,\n        type: ActivityTypes.Progress,\n        current: start,\n        total,\n      })\n    },\n\n    setStatus(statusText: string): void {\n      reporterActions.setActivityStatusText({\n        id,\n        statusText,\n      })\n    },\n\n    tick(increment: number = 1): void {\n      unflushedProgress += increment // Have to manually track this :/\n      updateProgress()\n    },\n\n    panicOnBuild(\n      errorMeta: ErrorMeta,\n      error?: Error | Array<Error>\n    ): IStructuredError | Array<IStructuredError> {\n      span.finish()\n\n      reporterActions.setActivityErrored({\n        id,\n      })\n\n      return reporter.panicOnBuild(errorMeta, error, pluginName)\n    },\n\n    panic(errorMeta: ErrorMeta, error?: Error | Array<Error>): never {\n      span.finish()\n\n      reporterActions.endActivity({\n        id,\n        status: ActivityStatuses.Failed,\n      })\n\n      return reporter.panic(errorMeta, error, pluginName)\n    },\n\n    end(): void {\n      updateProgress(true)\n      span.finish()\n      reporterActions.endActivity({\n        id,\n        status: ActivityStatuses.Success,\n      })\n    },\n\n    // @deprecated - use end()\n    done(): void {\n      updateProgress(true)\n      span.finish()\n      reporterActions.endActivity({\n        id,\n        status: ActivityStatuses.Success,\n      })\n    },\n\n    set total(value: number) {\n      total = unflushedTotal = value\n      updateProgress()\n    },\n\n    get total(): number {\n      return total\n    },\n\n    span,\n  }\n}\n"],"mappings":"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"}