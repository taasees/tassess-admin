{"version":3,"file":"ensure-windows-drive-letter-is-uppercase.js","names":["ensureWindowsDriveLetterIsUppercase","cwd","process","normalizedCwd","driveLetterToUpperCase","chdir","tmpdir","report","warn","stripIndent","path","segments","split","length","shift","toUpperCase","join"],"sources":["../../../src/reporter/util/ensure-windows-drive-letter-is-uppercase.ts"],"sourcesContent":["import { tmpdir } from \"os\"\nimport report from \"../index\"\n\n/**\n * This function ensures that the current working directory on Windows\n * always has an uppercase drive letter (i.e., C: vs. c:).\n *\n * Why?\n * 1. Different utils like \"true-case-path\", \"normalize-path\", \"slash\" treat Windows\n * drive letter differently. \"true-case-path\" will uppercase, others usually don't care.\n * As a result path normalization produces different results depending on current cwd (c: vs. C:)\n * which manifests in weird bugs that are very hard to debug.\n *\n * We can't control community plugins or site code, so everything should be working\n * even with a different set of libraries.\n *\n * Related: https://github.com/Profiscience/true-case-path/issues/3\n *\n * 2. Builds save some paths in a cache. If you run the first build from \"c:\" shell\n * and then the next one from \"C:\" shell, you may get a bunch of webpack warnings\n * because it expects module paths to be case-sensitive.\n */\nexport function ensureWindowsDriveLetterIsUppercase(): void {\n  const cwd = process.cwd()\n  const normalizedCwd = driveLetterToUpperCase(cwd)\n\n  if (cwd !== normalizedCwd) {\n    try {\n      // When cwd is \"c:\\dir\" then command \"cd C:\\dir\" won't do anything\n      // You have to change the dir twice to actually change the casing of the path\n      process.chdir(tmpdir())\n      process.chdir(normalizedCwd)\n    } catch {\n      // rollback\n      process.chdir(cwd)\n    }\n\n    if (normalizedCwd !== process.cwd()) {\n      report.warn(\n        report.stripIndent(`\n          Your working directory has a lower case drive letter:\n            \"${cwd}\".\n          ---^\n          For solid development experience, we recommend switching it to upper case:\n            cd \"C:\\\\\"\n            cd \"${normalizedCwd}\"\n          (Windows requires two directory switches to change the case of the drive letter)\n        `)\n      )\n    }\n  }\n}\n\nfunction driveLetterToUpperCase(path: string): string {\n  const segments = path.split(`:\\\\`)\n  return segments.length > 1\n    ? segments.shift()!.toUpperCase() + `:\\\\` + segments.join(`:\\\\`)\n    : path\n}\n"],"mappings":";;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,mCAAmC,GAAS;EAC1D,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAG,EAAE;EACzB,MAAME,aAAa,GAAGC,sBAAsB,CAACH,GAAG,CAAC;EAEjD,IAAIA,GAAG,KAAKE,aAAa,EAAE;IACzB,IAAI;MACF;MACA;MACAD,OAAO,CAACG,KAAK,CAAC,IAAAC,UAAM,GAAE,CAAC;MACvBJ,OAAO,CAACG,KAAK,CAACF,aAAa,CAAC;IAC9B,CAAC,CAAC,MAAM;MACN;MACAD,OAAO,CAACG,KAAK,CAACJ,GAAG,CAAC;IACpB;IAEA,IAAIE,aAAa,KAAKD,OAAO,CAACD,GAAG,EAAE,EAAE;MACnCM,cAAM,CAACC,IAAI,CACTD,cAAM,CAACE,WAAW,CAAE;AAC5B;AACA,eAAeR,GAAI;AACnB;AACA;AACA;AACA,kBAAkBE,aAAc;AAChC;AACA,SAAS,CAAC,CACH;IACH;EACF;AACF;AAEA,SAASC,sBAAsB,CAACM,IAAY,EAAU;EACpD,MAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAK,CAAE,KAAI,CAAC;EAClC,OAAOD,QAAQ,CAACE,MAAM,GAAG,CAAC,GACtBF,QAAQ,CAACG,KAAK,EAAE,CAAEC,WAAW,EAAE,GAAI,KAAI,GAAGJ,QAAQ,CAACK,IAAI,CAAE,KAAI,CAAC,GAC9DN,IAAI;AACV"}