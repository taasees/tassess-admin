{"version":3,"file":"reporter-timer.js","names":["createTimerReporter","text","id","span","reporter","reporterActions","pluginName","start","startActivity","type","ActivityTypes","Spinner","setStatus","statusText","setActivityStatusText","panicOnBuild","errorMeta","error","finish","setActivityErrored","panic","endActivity","status","ActivityStatuses","Failed","end","Success"],"sources":["../../src/reporter/reporter-timer.ts"],"sourcesContent":["/*\n * This module is used when calling reporter.\n * these logs\n */\nimport * as reporterActionsForTypes from \"./redux/actions\"\nimport { ActivityStatuses, ActivityTypes } from \"./constants\"\nimport { Span } from \"opentracing\"\nimport { reporter as gatsbyReporter } from \"./reporter\"\nimport { IStructuredError } from \"../structured-errors/types\"\nimport { ErrorMeta } from \"./types\"\n\ninterface ICreateTimerReporterArguments {\n  text: string\n  id: string\n  span: Span\n  reporter: typeof gatsbyReporter\n  reporterActions: typeof reporterActionsForTypes\n  pluginName?: string\n}\n\nexport interface ITimerReporter {\n  start(): void\n  setStatus(statusText: string): void\n  panicOnBuild(\n    errorMeta: ErrorMeta,\n    error?: Error | Array<Error>\n  ): IStructuredError | Array<IStructuredError>\n  panic(errorMeta: ErrorMeta, error?: Error | Array<Error>): never\n  end(): void\n  span: Span\n}\n\nexport const createTimerReporter = ({\n  text,\n  id,\n  span,\n  reporter,\n  reporterActions,\n  pluginName,\n}: ICreateTimerReporterArguments): ITimerReporter => {\n  return {\n    start(): void {\n      reporterActions.startActivity({\n        id,\n        text: text || `__timer__`,\n        type: ActivityTypes.Spinner,\n      })\n    },\n\n    setStatus(statusText: string): void {\n      reporterActions.setActivityStatusText({\n        id,\n        statusText,\n      })\n    },\n\n    panicOnBuild(\n      errorMeta: ErrorMeta,\n      error?: Error | Array<Error>\n    ): IStructuredError | Array<IStructuredError> {\n      span.finish()\n\n      reporterActions.setActivityErrored({\n        id,\n      })\n\n      return reporter.panicOnBuild(errorMeta, error, pluginName)\n    },\n\n    panic(errorMeta: ErrorMeta, error?: Error | Array<Error>): never {\n      span.finish()\n\n      reporterActions.endActivity({\n        id,\n        status: ActivityStatuses.Failed,\n      })\n\n      return reporter.panic(errorMeta, error, pluginName)\n    },\n\n    end(): void {\n      span.finish()\n\n      reporterActions.endActivity({\n        id,\n        status: ActivityStatuses.Success,\n      })\n    },\n\n    span,\n  }\n}\n"],"mappings":";;;;AAKA;AALA;AACA;AACA;AACA;;AA6BO,MAAMA,mBAAmB,GAAG,CAAC;EAClCC,IAAI;EACJC,EAAE;EACFC,IAAI;EACJC,QAAQ;EACRC,eAAe;EACfC;AAC6B,CAAC,KAAqB;EACnD,OAAO;IACLC,KAAK,GAAS;MACZF,eAAe,CAACG,aAAa,CAAC;QAC5BN,EAAE;QACFD,IAAI,EAAEA,IAAI,IAAK,WAAU;QACzBQ,IAAI,EAAEC,wBAAa,CAACC;MACtB,CAAC,CAAC;IACJ,CAAC;IAEDC,SAAS,CAACC,UAAkB,EAAQ;MAClCR,eAAe,CAACS,qBAAqB,CAAC;QACpCZ,EAAE;QACFW;MACF,CAAC,CAAC;IACJ,CAAC;IAEDE,YAAY,CACVC,SAAoB,EACpBC,KAA4B,EACgB;MAC5Cd,IAAI,CAACe,MAAM,EAAE;MAEbb,eAAe,CAACc,kBAAkB,CAAC;QACjCjB;MACF,CAAC,CAAC;MAEF,OAAOE,QAAQ,CAACW,YAAY,CAACC,SAAS,EAAEC,KAAK,EAAEX,UAAU,CAAC;IAC5D,CAAC;IAEDc,KAAK,CAACJ,SAAoB,EAAEC,KAA4B,EAAS;MAC/Dd,IAAI,CAACe,MAAM,EAAE;MAEbb,eAAe,CAACgB,WAAW,CAAC;QAC1BnB,EAAE;QACFoB,MAAM,EAAEC,2BAAgB,CAACC;MAC3B,CAAC,CAAC;MAEF,OAAOpB,QAAQ,CAACgB,KAAK,CAACJ,SAAS,EAAEC,KAAK,EAAEX,UAAU,CAAC;IACrD,CAAC;IAEDmB,GAAG,GAAS;MACVtB,IAAI,CAACe,MAAM,EAAE;MAEbb,eAAe,CAACgB,WAAW,CAAC;QAC1BnB,EAAE;QACFoB,MAAM,EAAEC,2BAAgB,CAACG;MAC3B,CAAC,CAAC;IACJ,CAAC;IAEDvB;EACF,CAAC;AACH,CAAC;AAAA"}