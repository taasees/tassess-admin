{"version":3,"file":"reporter-phantom.js","names":["createPhantomReporter","text","id","span","reporterActions","start","startActivity","type","ActivityTypes","Hidden","end","finish","endActivity","status","ActivityStatuses","Success"],"sources":["../../src/reporter/reporter-phantom.ts"],"sourcesContent":["import * as reporterActionsForTypes from \"./redux/actions\"\nimport { ActivityStatuses, ActivityTypes } from \"./constants\"\nimport { Span } from \"opentracing\"\n\ninterface ICreatePhantomReporterArguments {\n  text: string\n  id: string\n  span: Span\n  reporterActions: typeof reporterActionsForTypes\n}\n\nexport interface IPhantomReporter {\n  start(): void\n  end(): void\n  span: Span\n}\n\nexport const createPhantomReporter = ({\n  text,\n  id,\n  span,\n  reporterActions,\n}: ICreatePhantomReporterArguments): IPhantomReporter => {\n  return {\n    start(): void {\n      reporterActions.startActivity({\n        id,\n        text,\n        type: ActivityTypes.Hidden,\n      })\n    },\n\n    end(): void {\n      span.finish()\n\n      reporterActions.endActivity({\n        id,\n        status: ActivityStatuses.Success,\n      })\n    },\n\n    span,\n  }\n}\n"],"mappings":";;;;AACA;AAgBO,MAAMA,qBAAqB,GAAG,CAAC;EACpCC,IAAI;EACJC,EAAE;EACFC,IAAI;EACJC;AAC+B,CAAC,KAAuB;EACvD,OAAO;IACLC,KAAK,GAAS;MACZD,eAAe,CAACE,aAAa,CAAC;QAC5BJ,EAAE;QACFD,IAAI;QACJM,IAAI,EAAEC,wBAAa,CAACC;MACtB,CAAC,CAAC;IACJ,CAAC;IAEDC,GAAG,GAAS;MACVP,IAAI,CAACQ,MAAM,EAAE;MAEbP,eAAe,CAACQ,WAAW,CAAC;QAC1BV,EAAE;QACFW,MAAM,EAAEC,2BAAgB,CAACC;MAC3B,CAAC,CAAC;IACJ,CAAC;IAEDZ;EACF,CAAC;AACH,CAAC;AAAA"}