{"version":3,"file":"uuid.js","names":["SIZE","HEX","IDX","BUFFER","toString","substring","v4","randomBytes","i","tmp","out","uuid"],"sources":["../../src/core-utils/uuid.ts"],"sourcesContent":["/**\n * Copied from https://github.com/lukeed/uuid\n * https://github.com/lukeed/uuid/blob/master/src/secure.js\n */\nimport { randomBytes } from \"crypto\"\n\nconst SIZE = 4096\nconst HEX: Array<string> = []\nlet IDX = 0\nlet BUFFER: Buffer\n\nfor (; IDX < 256; IDX++) {\n  HEX[IDX] = (IDX + 256).toString(16).substring(1)\n}\n\nexport function v4(): string {\n  if (!BUFFER || IDX + 16 > SIZE) {\n    BUFFER = randomBytes(SIZE)\n    IDX = 0\n  }\n\n  let i = 0\n  let tmp\n  let out = ``\n  for (; i < 16; i++) {\n    tmp = BUFFER[IDX + i]\n    if (i == 6) out += HEX[(tmp & 15) | 64]\n    else if (i == 8) out += HEX[(tmp & 63) | 128]\n    else out += HEX[tmp]\n\n    if (i & 1 && i > 1 && i < 11) out += `-`\n  }\n\n  IDX += 16\n  return out\n}\n\nexport const uuid = {\n  v4,\n}\n"],"mappings":";;;;;AAIA;AAJA;AACA;AACA;AACA;;AAGA,MAAMA,IAAI,GAAG,IAAI;AACjB,MAAMC,GAAkB,GAAG,EAAE;AAC7B,IAAIC,GAAG,GAAG,CAAC;AACX,IAAIC,MAAc;AAElB,OAAOD,GAAG,GAAG,GAAG,EAAEA,GAAG,EAAE,EAAE;EACvBD,GAAG,CAACC,GAAG,CAAC,GAAG,CAACA,GAAG,GAAG,GAAG,EAAEE,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;AAClD;AAEO,SAASC,EAAE,GAAW;EAC3B,IAAI,CAACH,MAAM,IAAID,GAAG,GAAG,EAAE,GAAGF,IAAI,EAAE;IAC9BG,MAAM,GAAG,IAAAI,mBAAW,EAACP,IAAI,CAAC;IAC1BE,GAAG,GAAG,CAAC;EACT;EAEA,IAAIM,CAAC,GAAG,CAAC;EACT,IAAIC,GAAG;EACP,IAAIC,GAAG,GAAI,EAAC;EACZ,OAAOF,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAClBC,GAAG,GAAGN,MAAM,CAACD,GAAG,GAAGM,CAAC,CAAC;IACrB,IAAIA,CAAC,IAAI,CAAC,EAAEE,GAAG,IAAIT,GAAG,CAAEQ,GAAG,GAAG,EAAE,GAAI,EAAE,CAAC,MAClC,IAAID,CAAC,IAAI,CAAC,EAAEE,GAAG,IAAIT,GAAG,CAAEQ,GAAG,GAAG,EAAE,GAAI,GAAG,CAAC,MACxCC,GAAG,IAAIT,GAAG,CAACQ,GAAG,CAAC;IAEpB,IAAID,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,EAAE,EAAEE,GAAG,IAAK,GAAE;EAC1C;EAEAR,GAAG,IAAI,EAAE;EACT,OAAOQ,GAAG;AACZ;AAEO,MAAMC,IAAI,GAAG;EAClBL;AACF,CAAC;AAAA"}