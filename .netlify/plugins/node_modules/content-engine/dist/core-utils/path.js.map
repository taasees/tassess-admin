{"version":3,"file":"path.js","names":["joinPath","paths","joinedPath","path","join","os","platform","replace","nodePaths","isNodeInternalModulePath","fileName","some","regTest","test","slash","isExtendedLengthPath"],"sources":["../../src/core-utils/path.ts"],"sourcesContent":["import path from \"path\"\nimport os from \"os\"\n\n/**\n * Joins all given path segments and converts\n * @param paths A sequence of path segments\n */\nexport function joinPath(...paths: Array<string>): string {\n  const joinedPath = path.join(...paths)\n  if (os.platform() === `win32`) {\n    return joinedPath.replace(/\\\\/g, `\\\\\\\\`)\n  }\n\n  return joinedPath\n}\n\n// copied from https://runpkg.com/?pretty-error@2.1.1/lib/nodePaths.js\n// and added `^internal/` test\nconst nodePaths = [\n  /^_debugger.js$/,\n  /^_http_agent.js$/,\n  /^_http_client.js$/,\n  /^_http_common.js$/,\n  /^_http_incoming.js$/,\n  /^_http_outgoing.js$/,\n  /^_http_server.js$/,\n  /^_linklist.js$/,\n  /^_stream_duplex.js$/,\n  /^_stream_passthrough.js$/,\n  /^_stream_readable.js$/,\n  /^_stream_transform.js$/,\n  /^_stream_writable.js$/,\n  /^_tls_legacy.js$/,\n  /^_tls_wrap.js$/,\n  /^assert.js$/,\n  /^buffer.js$/,\n  /^child_process.js$/,\n  /^cluster.js$/,\n  /^console.js$/,\n  /^constants.js$/,\n  /^crypto.js$/,\n  /^dgram.js$/,\n  /^dns.js$/,\n  /^domain.js$/,\n  /^events.js$/,\n  /^freelist.js$/,\n  /^fs.js$/,\n  /^http.js$/,\n  /^https.js$/,\n  /^module.js$/,\n  /^net.js$/,\n  /^os.js$/,\n  /^path.js$/,\n  /^punycode.js$/,\n  /^querystring.js$/,\n  /^readline.js$/,\n  /^repl.js$/,\n  /^smalloc.js$/,\n  /^stream.js$/,\n  /^string_decoder.js$/,\n  /^sys.js$/,\n  /^timers.js$/,\n  /^tls.js$/,\n  /^tty.js$/,\n  /^url.js$/,\n  /^util.js$/,\n  /^vm.js$/,\n  /^zlib.js$/,\n  /^node.js$/,\n  /^internal[/\\\\]/,\n]\n\n/**\n * Checks if the file name matches a node path\n * @param fileName File name\n */\nexport const isNodeInternalModulePath = (fileName: string): boolean =>\n  nodePaths.some(regTest => regTest.test(fileName))\n\n/**\n * Convert Windows backslash paths to slash paths: foo\\\\bar âž” foo/bar\n *\n * @param  path\n * @return  slashed path\n */\nexport function slash(path: string): string {\n  const isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(path)\n\n  if (isExtendedLengthPath) {\n    return path\n  }\n\n  return path.replace(/\\\\/g, `/`)\n}\n"],"mappings":";;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACO,SAASA,QAAQ,CAAC,GAAGC,KAAoB,EAAU;EACxD,MAAMC,UAAU,GAAGC,aAAI,CAACC,IAAI,CAAC,GAAGH,KAAK,CAAC;EACtC,IAAII,WAAE,CAACC,QAAQ,EAAE,KAAM,OAAM,EAAE;IAC7B,OAAOJ,UAAU,CAACK,OAAO,CAAC,KAAK,EAAG,MAAK,CAAC;EAC1C;EAEA,OAAOL,UAAU;AACnB;;AAEA;AACA;AACA,MAAMM,SAAS,GAAG,CAChB,gBAAgB,EAChB,kBAAkB,EAClB,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACrB,qBAAqB,EACrB,mBAAmB,EACnB,gBAAgB,EAChB,qBAAqB,EACrB,0BAA0B,EAC1B,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,EACvB,kBAAkB,EAClB,gBAAgB,EAChB,aAAa,EACb,aAAa,EACb,oBAAoB,EACpB,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,aAAa,EACb,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,EACf,SAAS,EACT,WAAW,EACX,YAAY,EACZ,aAAa,EACb,UAAU,EACV,SAAS,EACT,WAAW,EACX,eAAe,EACf,kBAAkB,EAClB,eAAe,EACf,WAAW,EACX,cAAc,EACd,aAAa,EACb,qBAAqB,EACrB,UAAU,EACV,aAAa,EACb,UAAU,EACV,UAAU,EACV,UAAU,EACV,WAAW,EACX,SAAS,EACT,WAAW,EACX,WAAW,EACX,gBAAgB,CACjB;;AAED;AACA;AACA;AACA;AACO,MAAMC,wBAAwB,GAAIC,QAAgB,IACvDF,SAAS,CAACG,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACH,QAAQ,CAAC,CAAC;;AAEnD;AACA;AACA;AACA;AACA;AACA;AALA;AAMO,SAASI,KAAK,CAACX,IAAY,EAAU;EAC1C,MAAMY,oBAAoB,GAAG,WAAW,CAACF,IAAI,CAACV,IAAI,CAAC;EAEnD,IAAIY,oBAAoB,EAAE;IACxB,OAAOZ,IAAI;EACb;EAEA,OAAOA,IAAI,CAACI,OAAO,CAAC,KAAK,EAAG,GAAE,CAAC;AACjC"}