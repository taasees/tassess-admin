{"version":3,"file":"md5-file.js","names":["md5File","filePath","md5hasher","createMD5","Promise","resolve","reject","init","fileInput","fs","createReadStream","on","err","data","update","digest"],"sources":["../../src/core-utils/md5-file.ts"],"sourcesContent":["import { createMD5 } from \"hash-wasm\"\nimport * as fs from \"fs-extra\"\n\n/**\n * Create a MD5 hash from a given filePath\n * @param filePath Absolute path to the file\n * @returns MD5 hash in hex format\n */\nexport const md5File = async (filePath: string): Promise<string> => {\n  const md5hasher = await createMD5()\n\n  return new Promise((resolve, reject) => {\n    md5hasher.init()\n\n    const fileInput = fs.createReadStream(filePath)\n\n    fileInput.on(`error`, err => {\n      reject(err)\n    })\n\n    fileInput.on(`data`, data => {\n      md5hasher.update(data)\n    })\n\n    fileInput.on(`end`, () => {\n      resolve(md5hasher.digest(`hex`))\n    })\n  })\n}\n"],"mappings":";;;;AAAA;AACA;AAA8B;AAAA;AAE9B;AACA;AACA;AACA;AACA;AACO,MAAMA,OAAO,GAAG,MAAOC,QAAgB,IAAsB;EAClE,MAAMC,SAAS,GAAG,MAAM,IAAAC,mBAAS,GAAE;EAEnC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCJ,SAAS,CAACK,IAAI,EAAE;IAEhB,MAAMC,SAAS,GAAGC,EAAE,CAACC,gBAAgB,CAACT,QAAQ,CAAC;IAE/CO,SAAS,CAACG,EAAE,CAAE,OAAM,EAAEC,GAAG,IAAI;MAC3BN,MAAM,CAACM,GAAG,CAAC;IACb,CAAC,CAAC;IAEFJ,SAAS,CAACG,EAAE,CAAE,MAAK,EAAEE,IAAI,IAAI;MAC3BX,SAAS,CAACY,MAAM,CAACD,IAAI,CAAC;IACxB,CAAC,CAAC;IAEFL,SAAS,CAACG,EAAE,CAAE,KAAI,EAAE,MAAM;MACxBN,OAAO,CAACH,SAAS,CAACa,MAAM,CAAE,KAAI,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAAA"}