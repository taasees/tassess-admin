{"version":3,"file":"filename-utils.js","names":["getParsedPath","url","path","parse","Url","pathname","getRemoteFileExtension","ext","getRemoteFileName","decodeURIComponent","name","createFileHash","input","length","crypto","createHash","update","digest","substring","filenamePurgeRegex","createFilePath","directory","filename","purgedFileName","replace","shouldAddHash","join"],"sources":["../../src/core-utils/filename-utils.ts"],"sourcesContent":["import path from \"path\"\nimport crypto from \"crypto\"\nimport Url from \"url\"\n\n/**\n * getParsedPath\n * --\n * Parses remote url to a path object\n *\n */\nfunction getParsedPath(url: string): path.ParsedPath {\n  return path.parse(Url.parse(url).pathname || ``)\n}\n\n/**\n * getRemoteFileExtension\n * --\n * Parses remote url to retrieve remote file extension\n *\n */\nexport function getRemoteFileExtension(url: string): string {\n  return getParsedPath(url).ext\n}\n\n/**\n * getRemoteFileName\n * --\n * Parses remote url to retrieve remote file name\n *\n */\nexport function getRemoteFileName(url: string): string {\n  return decodeURIComponent(getParsedPath(url).name)\n}\n\nexport function createFileHash(input: string, length: number = 8): string {\n  return crypto\n    .createHash(`sha1`)\n    .update(input)\n    .digest(`hex`)\n    .substring(0, length)\n}\n\nconst filenamePurgeRegex = /:|\\/|\\*|\\?|\"|<|>|\\||\\\\/g\n\n/**\n * createFilePath\n * --\n * Gets full file path while replacing forbidden characters with a `-`\n */\nexport function createFilePath(\n  directory: string,\n  filename: string,\n  ext: string\n): string {\n  directory = decodeURIComponent(directory)\n  filename = decodeURIComponent(filename)\n\n  const purgedFileName = filename.replace(filenamePurgeRegex, `-`)\n  const shouldAddHash = purgedFileName !== filename\n\n  if (shouldAddHash) {\n    return path.join(\n      directory,\n      `${purgedFileName}-${createFileHash(filename)}${ext}`\n    )\n  } else {\n    return path.join(directory, `${filename}${ext}`)\n  }\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,CAACC,GAAW,EAAmB;EACnD,OAAOC,aAAI,CAACC,KAAK,CAACC,YAAG,CAACD,KAAK,CAACF,GAAG,CAAC,CAACI,QAAQ,IAAK,EAAC,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsB,CAACL,GAAW,EAAU;EAC1D,OAAOD,aAAa,CAACC,GAAG,CAAC,CAACM,GAAG;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiB,CAACP,GAAW,EAAU;EACrD,OAAOQ,kBAAkB,CAACT,aAAa,CAACC,GAAG,CAAC,CAACS,IAAI,CAAC;AACpD;AAEO,SAASC,cAAc,CAACC,KAAa,EAAEC,MAAc,GAAG,CAAC,EAAU;EACxE,OAAOC,eAAM,CACVC,UAAU,CAAE,MAAK,CAAC,CAClBC,MAAM,CAACJ,KAAK,CAAC,CACbK,MAAM,CAAE,KAAI,CAAC,CACbC,SAAS,CAAC,CAAC,EAAEL,MAAM,CAAC;AACzB;AAEA,MAAMM,kBAAkB,GAAG,yBAAyB;;AAEpD;AACA;AACA;AACA;AACA;AACO,SAASC,cAAc,CAC5BC,SAAiB,EACjBC,QAAgB,EAChBf,GAAW,EACH;EACRc,SAAS,GAAGZ,kBAAkB,CAACY,SAAS,CAAC;EACzCC,QAAQ,GAAGb,kBAAkB,CAACa,QAAQ,CAAC;EAEvC,MAAMC,cAAc,GAAGD,QAAQ,CAACE,OAAO,CAACL,kBAAkB,EAAG,GAAE,CAAC;EAChE,MAAMM,aAAa,GAAGF,cAAc,KAAKD,QAAQ;EAEjD,IAAIG,aAAa,EAAE;IACjB,OAAOvB,aAAI,CAACwB,IAAI,CACdL,SAAS,EACR,GAAEE,cAAe,IAAGZ,cAAc,CAACW,QAAQ,CAAE,GAAEf,GAAI,EAAC,CACtD;EACH,CAAC,MAAM;IACL,OAAOL,aAAI,CAACwB,IAAI,CAACL,SAAS,EAAG,GAAEC,QAAS,GAAEf,GAAI,EAAC,CAAC;EAClD;AACF"}