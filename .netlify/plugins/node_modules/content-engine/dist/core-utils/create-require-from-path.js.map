{"version":3,"file":"create-require-from-path.js","names":["fallback","filename","mod","Module","paths","_nodeModulePaths","path","dirname","_compile","exports","createRequireFromPath","createRequire","requireFromInstalledGatsbyDist","modulePath","requireFromSite","join","process","cwd","e","message","includes","resolveFromContentEngine","rootDir","resolve"],"sources":["../../src/core-utils/create-require-from-path.ts"],"sourcesContent":["import Module from \"module\"\nimport path from \"path\"\n\n/**\n * We need to use private Module methods in this polyfill\n */\ninterface IModulePrivateMethods {\n  _nodeModulePaths: (directory: string) => Array<string>\n  _compile: (src: string, file: string) => void\n}\n\nconst fallback = (filename: string): NodeRequire => {\n  const mod = new Module(filename) as Module & IModulePrivateMethods\n\n  mod.filename = filename\n  mod.paths = (\n    Module as typeof Module & IModulePrivateMethods\n  )._nodeModulePaths(path.dirname(filename))\n  mod._compile(`module.exports = require;`, filename)\n\n  return mod.exports\n}\n\n// Polyfill Node's `Module.createRequireFromPath` if not present (added in Node v10.12.0)\nexport const createRequireFromPath =\n  Module.createRequire || Module.createRequireFromPath || fallback\n\nexport const requireFromInstalledGatsbyDist = (modulePath: string) => {\n  try {\n    const requireFromSite = createRequireFromPath(\n      path.join(process.cwd() + `/:internal:`)\n    )\n    return requireFromSite(path.join(`gatsby/dist/`, modulePath))\n  } catch (e) {\n    if (!e.message.includes(`Cannot find module`)) {\n      throw e\n    }\n\n    return null\n  }\n}\nexport const resolveFromContentEngine = (\n  modulePath: string,\n  rootDir = process.cwd()\n) => {\n  try {\n    const requireFromSite = createRequireFromPath(\n      path.join(rootDir + `/:internal:`)\n    )\n    return requireFromSite.resolve(\n      path.join(`content-engine/dist/`, modulePath)\n    )\n  } catch (e) {\n    if (!e.message.includes(`Cannot find module`)) {\n      throw e\n    }\n\n    return null\n  }\n}\n"],"mappings":";;;;;AAAA;AACA;AAUA,MAAMA,QAAQ,GAAIC,QAAgB,IAAkB;EAClD,MAAMC,GAAG,GAAG,IAAIC,eAAM,CAACF,QAAQ,CAAmC;EAElEC,GAAG,CAACD,QAAQ,GAAGA,QAAQ;EACvBC,GAAG,CAACE,KAAK,GACPD,eAAM,CACNE,gBAAgB,CAACC,aAAI,CAACC,OAAO,CAACN,QAAQ,CAAC,CAAC;EAC1CC,GAAG,CAACM,QAAQ,CAAE,2BAA0B,EAAEP,QAAQ,CAAC;EAEnD,OAAOC,GAAG,CAACO,OAAO;AACpB,CAAC;;AAED;AACO,MAAMC,qBAAqB,GAChCP,eAAM,CAACQ,aAAa,IAAIR,eAAM,CAACO,qBAAqB,IAAIV,QAAQ;AAAA;AAE3D,MAAMY,8BAA8B,GAAIC,UAAkB,IAAK;EACpE,IAAI;IACF,MAAMC,eAAe,GAAGJ,qBAAqB,CAC3CJ,aAAI,CAACS,IAAI,CAACC,OAAO,CAACC,GAAG,EAAE,GAAI,aAAY,CAAC,CACzC;IACD,OAAOH,eAAe,CAACR,aAAI,CAACS,IAAI,CAAE,cAAa,EAAEF,UAAU,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOK,CAAC,EAAE;IACV,IAAI,CAACA,CAAC,CAACC,OAAO,CAACC,QAAQ,CAAE,oBAAmB,CAAC,EAAE;MAC7C,MAAMF,CAAC;IACT;IAEA,OAAO,IAAI;EACb;AACF,CAAC;AAAA;AACM,MAAMG,wBAAwB,GAAG,CACtCR,UAAkB,EAClBS,OAAO,GAAGN,OAAO,CAACC,GAAG,EAAE,KACpB;EACH,IAAI;IACF,MAAMH,eAAe,GAAGJ,qBAAqB,CAC3CJ,aAAI,CAACS,IAAI,CAACO,OAAO,GAAI,aAAY,CAAC,CACnC;IACD,OAAOR,eAAe,CAACS,OAAO,CAC5BjB,aAAI,CAACS,IAAI,CAAE,sBAAqB,EAAEF,UAAU,CAAC,CAC9C;EACH,CAAC,CAAC,OAAOK,CAAC,EAAE;IACV,IAAI,CAACA,CAAC,CAACC,OAAO,CAACC,QAAQ,CAAE,oBAAmB,CAAC,EAAE;MAC7C,MAAMF,CAAC;IACT;IAEA,OAAO,IAAI;EACb;AACF,CAAC;AAAA"}