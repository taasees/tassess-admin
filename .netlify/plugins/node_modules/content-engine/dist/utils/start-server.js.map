{"version":3,"file":"start-server.js","names":["startServer","program","app","use","compression","cors","graphqlEndpoint","graphiqlExplorer","getFragments","fragments","def","store","getState","definitions","values","kind","Kind","FRAGMENT_DEFINITION","push","createGraphqlEndpointHandler","schema","context","withResolverContext","schemaComposer","schemaCustomization","composer","customContext","onOperation","_req","_args","result","errors","map","err","toJSON","extensions","stack","split","enableRefresh","process","env","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","REFRESH_ENDPOINT","refresh","req","pluginName","global","__GATSBY","buildId","uuid","v4","emitter","emit","webhookBody","body","post","express","json","res","params","authorizedRefresh","headers","authorization","status","setHeader","error","end","addImageRoutes","developMiddleware","config","apiRunnerNode","deferNodeMutation","method","sendStatus","Promise","server","ssl","https","Server","http","listener","listen","port","host"],"sources":["../../src/utils/start-server.ts"],"sourcesContent":["import express from \"express\"\nimport compression from \"compression\"\nimport { createHandler as createGraphqlEndpointHandler } from \"graphql-http/lib/use/express\"\nimport type { OperationContext } from \"graphql-http\"\nimport graphiqlExplorer from \"content-engine-graphiql-explorer\"\nimport { FragmentDefinitionNode, GraphQLError, Kind } from \"graphql\"\nimport { uuid } from \"../core-utils/uuid\"\nimport http from \"http\"\nimport https from \"https\"\nimport cors from \"cors\"\n// import telemetry from \"gatsby-telemetry\"\nimport { store, emitter } from \"../redux\"\n\nimport withResolverContext from \"../schema/context\"\nimport apiRunnerNode from \"./api-runner-node\"\n\nimport { IProgram } from \"../commands/types\"\nimport type { Express } from \"express\"\nimport { addImageRoutes } from \"../plugin-utils/polyfill-remote-file\"\n\nexport type Listener = http.Server | https.Server\n\ninterface IServer {\n  listener: Listener\n}\n\nexport async function startServer(\n  program: IProgram,\n  app: Express\n): Promise<IServer> {\n  /**\n   * Set up the express app.\n   **/\n  app.use(compression())\n  // app.use(telemetry.expressMiddleware(`DEVELOP`))\n\n  app.use(cors())\n\n  /**\n   * Pattern matching all endpoints with graphql or graphiql with 1 or more leading underscores\n   */\n  const graphqlEndpoint = `/_+graphi?ql`\n\n  graphiqlExplorer(app, {\n    graphqlEndpoint,\n    getFragments: function getFragments(): Array<FragmentDefinitionNode> {\n      const fragments: Array<FragmentDefinitionNode> = []\n      for (const def of store.getState().definitions.values()) {\n        if (def.def.kind === Kind.FRAGMENT_DEFINITION) {\n          fragments.push(def.def)\n        }\n      }\n      return fragments\n    },\n  })\n\n  app.use(\n    graphqlEndpoint,\n    createGraphqlEndpointHandler({\n      schema() {\n        return store.getState().schema\n      },\n      context() {\n        return withResolverContext({\n          schema: store.getState().schema,\n          schemaComposer: store.getState().schemaCustomization.composer,\n          context: {},\n          customContext: store.getState().schemaCustomization.context,\n        }) as unknown as OperationContext\n      },\n      onOperation(_req, _args, result) {\n        if (result.errors) {\n          result.errors = result.errors.map(\n            err =>\n              ({\n                ...err.toJSON(),\n                extensions: {\n                  stack: err.stack ? err.stack.split(`\\n`) : [],\n                },\n              } as unknown as GraphQLError)\n          )\n        }\n\n        result.extensions = {\n          enableRefresh: process.env.ENABLE_GATSBY_REFRESH_ENDPOINT,\n          refreshToken: process.env.GATSBY_REFRESH_TOKEN,\n        }\n\n        return result\n      },\n    })\n  )\n\n  /**\n   * Refresh external data sources.\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  const REFRESH_ENDPOINT = `/__refresh`\n  const refresh = async (\n    req: express.Request,\n    pluginName?: string\n  ): Promise<void> => {\n    global.__GATSBY.buildId = uuid.v4()\n\n    emitter.emit(`WEBHOOK_RECEIVED`, {\n      webhookBody: req.body,\n      pluginName,\n    })\n  }\n\n  app.post(`${REFRESH_ENDPOINT}/:plugin_name?`, express.json(), (req, res) => {\n    const pluginName = req.params[`plugin_name`]\n\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (authorizedRefresh) {\n      refresh(req, pluginName)\n      res.status(200)\n      res.setHeader(`content-type`, `application/json`)\n    } else {\n      res.status(authorizedRefresh ? 404 : 403)\n      res.json({\n        error: `Authorization failed. Make sure you add authorization header to your refresh requests`,\n      })\n    }\n    res.end()\n  })\n\n  addImageRoutes(\n    app,\n    // @ts-ignore todo should this be Store or GatsbyStore?\n    store\n  )\n\n  // Expose access to app for advanced use cases\n  const { developMiddleware } = store.getState().config\n\n  if (developMiddleware) {\n    developMiddleware(app, program)\n  }\n\n  await apiRunnerNode(`onCreateDevServer`, { app, deferNodeMutation: true })\n\n  app.use(async (req, res) => {\n    // in this catch-all block we don't support POST so we should 404\n    if (req.method === `POST`) {\n      res.status(404).end()\n      return\n    }\n\n    res.sendStatus(404)\n  })\n\n  return new Promise(res => {\n    /**\n     * Set up the HTTP server and socket.io.\n     **/\n    const server = program.ssl\n      ? new https.Server(program.ssl, app)\n      : new http.Server(app)\n    const listener = server.listen(program.port, program.host, () => {\n      res({ listener })\n    })\n  })\n}\n"],"mappings":"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"}