{"version":3,"file":"api-runner-node.js","names":["bindActionCreators","memoize","origBindActionCreators","tracer","require","globalTracer","createContentDigest","node","internal","type","_createContentDigest","contentDigest","undefined","owner","fieldOwners","ignoreType","counter","fields","process","env","BLUEBIRD_DEBUG","BLUEBIRD_LONG_STACK_TRACES","Promise","config","longStackTraces","nodeMutationsWrappers","getNode","id","wrapNode","getNodes","wrapNodes","getNodesByType","getNodeAndSavePathDependency","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","deferNodeMutation","defer","actionKey","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","reportOnce","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","deferredAction","resolve","emitter","emit","payload","NODE_MUTATION_ACTIONS","deferActions","actions","deferred","forEach","action","getLocalReporter","activity","reporter","panicOnBuild","bind","getErrorMapWithPluginName","pluginName","errorMap","entries","reduce","memo","val","extendLocalReporterToCatchPluginErrors","runningActivities","setErrorMap","error","panic","errorMeta","activityTimer","text","activityArgs","apply","originalStart","start","originalEnd","end","add","delete","createProgress","total","originalDone","done","getUninitializedCache","message","get","Error","set","del","availableActionsCache","Map","runAPI","gatsbyNode","importGatsbyPlugin","spanOptions","pluginSpan","setTag","publicActions","restrictedActionsAvailableInAPI","availableActions","has","store","dispatch","namespacedCreateNodeId","createNodeId","tracing","cache","getCache","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","chalk","bold","possiblyCodeFrame","getNonGatsbyCodeFrameFormatted","push","warn","join","localReporter","Set","extendedLocalReporter","endInProgressActivitiesCreatedByThisRun","shouldDetectNodeMutations","includes","apiCallArgs","loadNodeContent","schema","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","pluginOptions","fromCallback","callback","cb","err","finish","apisRunningById","apisRunningByTraceId","waitingForCasacadeToFinish","apiRunnerNode","pluginSource","plugins","getState","flattenedPlugins","implementingPlugins","filter","nodeAPIs","rejectApiRunnerNode","traceTags","waitForCascadingActions","apiSpanArgs","apiSpan","value","apiRunInstance","span","startTime","Date","toJSON","filename","page","path","argsJson","JSON","stringify","size","currentCount","apiRunPromiseOptions","runPromise","GATSBY_EXPERIMENTAL_PARALLEL_SOURCING","map","concurrency","mapSeries","cleanup","results","result","instance","apisByTraceIdCount","then","shouldOnCreateNode","catch","file","stackTrace","parse","find","test","fileName","codeFrame","structuredError","errorParser","lineNumber","line","columnNumber","column","trimmedFileName","match","code","fs","readFileSync","encoding","codeFrameColumns","highlightCode","_e","location","filePath","context","e"],"sources":["../../src/utils/api-runner-node.ts"],"sourcesContent":["import Promise from \"bluebird\"\nimport _ from \"lodash\"\nimport chalk from \"chalk\"\nimport { bindActionCreators as origBindActionCreators } from \"redux\"\nimport memoize from \"memoizee\"\n\nconst bindActionCreators = memoize(origBindActionCreators)\n\nconst tracer = require(`opentracing`).globalTracer()\nimport reporter from \"../reporter\"\nimport stackTrace from \"stack-trace\"\nimport { codeFrameColumns } from \"@babel/code-frame\"\nimport fs from \"fs-extra\"\nimport { getCache } from \"./get-cache\"\nimport { createNodeId } from \"./create-node-id\"\nimport { createContentDigest as _createContentDigest } from \"../core-utils\"\nimport {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} from \"../schema/types/type-builders\"\nimport { emitter, store } from \"../redux\"\nimport { getNodes, getNode, getNodesByType } from \"../datastore\"\nimport { getNodeAndSavePathDependency, loadNodeContent } from \"./nodes\"\nimport { importGatsbyPlugin } from \"./import-gatsby-plugin\"\nimport { getNonGatsbyCodeFrameFormatted } from \"./stack-trace-utils\"\n// import { trackBuildError, decorateEvent } from \"gatsby-telemetry\"\nimport errorParser from \"./api-runner-error-parser\"\nimport { wrapNode, wrapNodes } from \"./detect-node-mutations\"\nimport { reportOnce } from \"./report-once\"\n\n// Override createContentDigest to remove autogenerated data from nodes to\n// ensure consistent digests.\nfunction createContentDigest(node) {\n  if (!node?.internal?.type) {\n    // this doesn't look like a node, so let's just pass it as-is\n    return _createContentDigest(node)\n  }\n  return _createContentDigest({\n    ...node,\n    internal: {\n      ...node.internal,\n      // Remove auto-generated fields that'd prevent\n      // creating a consistent contentDigest.\n      contentDigest: undefined,\n      owner: undefined,\n      fieldOwners: undefined,\n      ignoreType: undefined,\n      counter: undefined,\n    },\n    fields: undefined,\n  })\n}\n\nif (!process.env.BLUEBIRD_DEBUG && !process.env.BLUEBIRD_LONG_STACK_TRACES) {\n  // Unless specified - disable longStackTraces\n  // as this have severe perf penalty ( http://bluebirdjs.com/docs/api/promise.longstacktraces.html )\n  // This is mainly for `gatsby develop` due to NODE_ENV being set to development\n  // which cause bluebird to enable longStackTraces\n  // `gatsby build` (with NODE_ENV=production) already doesn't enable longStackTraces\n  Promise.config({ longStackTraces: false })\n}\n\nconst nodeMutationsWrappers = {\n  getNode(id) {\n    return wrapNode(getNode(id))\n  },\n  getNodes() {\n    return wrapNodes(getNodes())\n  },\n  getNodesByType(type) {\n    return wrapNodes(getNodesByType(type))\n  },\n  getNodeAndSavePathDependency(id) {\n    return wrapNode(getNodeAndSavePathDependency(id))\n  },\n}\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId, deferNodeMutation } = actionOptions\n  const defer = deferNodeMutation ? `defer-node-mutation` : ``\n  const actionKey = plugin.name + api + traceId + defer\n  if (boundPluginActionCreators[actionKey]) {\n    return boundPluginActionCreators[actionKey]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          if (args.length === 0) {\n            return boundActionCreator(plugin, actionOptions)\n          }\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          else if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions)\n          }\n\n          reportOnce(\n            `Unhandled redux action: ${key}, in plugin: ${plugin.name}`\n          )\n\n          return undefined\n        }\n      }\n    }\n    boundPluginActionCreators[actionKey] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst deferredAction =\n  type =>\n  (...args) => {\n    // Regular createNode returns a Promise, but when deferred we need\n    // to wrap it in another which we resolve when it's actually called\n    if (type === `createNode`) {\n      return new Promise(resolve => {\n        emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n          type,\n          payload: args,\n          resolve,\n        })\n      })\n    }\n    return emitter.emit(`ENQUEUE_NODE_MUTATION`, {\n      type,\n      payload: args,\n    })\n  }\n\nconst NODE_MUTATION_ACTIONS = [\n  `createNode`,\n  `deleteNode`,\n  `touchNode`,\n  `createParentChildLink`,\n  `createNodeField`,\n]\n\nconst deferActions = actions => {\n  const deferred = { ...actions }\n  NODE_MUTATION_ACTIONS.forEach(action => {\n    deferred[action] = deferredAction(action)\n  })\n  return deferred\n}\n\n/**\n * Create a local reporter\n * Used to override reporter methods with activity methods\n */\nfunction getLocalReporter({ activity, reporter }) {\n  // If we have an activity, bind panicOnBuild to the activities method to\n  // join them\n  if (activity) {\n    return { ...reporter, panicOnBuild: activity.panicOnBuild.bind(activity) }\n  }\n\n  return reporter\n}\n\nfunction getErrorMapWithPluginName(pluginName, errorMap) {\n  const entries = Object.entries(errorMap)\n\n  return entries.reduce((memo, [key, val]) => {\n    memo[`${pluginName}_${key}`] = val\n\n    return memo\n  }, {})\n}\n\nfunction extendLocalReporterToCatchPluginErrors({\n  reporter,\n  pluginName,\n  runningActivities,\n}) {\n  let setErrorMap\n\n  let error = reporter.error\n  let panic = reporter.panic\n  let panicOnBuild = reporter.panicOnBuild\n\n  if (pluginName && reporter?.setErrorMap) {\n    setErrorMap = errorMap =>\n      reporter.setErrorMap(getErrorMapWithPluginName(pluginName, errorMap))\n\n    error = (errorMeta, error) => {\n      reporter.error(errorMeta, error, pluginName)\n    }\n\n    panic = (errorMeta, error) => {\n      reporter.panic(errorMeta, error, pluginName)\n    }\n\n    panicOnBuild = (errorMeta, error) => {\n      reporter.panicOnBuild(errorMeta, error, pluginName)\n    }\n  }\n\n  return {\n    ...reporter,\n    setErrorMap,\n    error,\n    panic,\n    panicOnBuild,\n    // If you change arguments here, update reporter.ts as well\n    activityTimer: (text, activityArgs = {}) => {\n      let args = [text, activityArgs]\n\n      if (pluginName && setErrorMap) {\n        args = [...args, pluginName]\n      }\n\n      // eslint-disable-next-line prefer-spread\n      const activity = reporter.activityTimer.apply(reporter, args)\n\n      const originalStart = activity.start\n      const originalEnd = activity.end\n\n      activity.start = () => {\n        originalStart.apply(activity)\n        runningActivities.add(activity)\n      }\n\n      activity.end = () => {\n        originalEnd.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      return activity\n    },\n    // If you change arguments here, update reporter.ts as well\n    createProgress: (text, total = 0, start = 0, activityArgs = {}) => {\n      let args = [text, total, start, activityArgs]\n\n      if (pluginName && setErrorMap) {\n        args = [...args, pluginName]\n      }\n\n      // eslint-disable-next-line prefer-spread\n      const activity = reporter.createProgress.apply(reporter, args)\n\n      const originalStart = activity.start\n      const originalEnd = activity.end\n      const originalDone = activity.done\n\n      activity.start = () => {\n        originalStart.apply(activity)\n        runningActivities.add(activity)\n      }\n\n      activity.end = () => {\n        originalEnd.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      activity.done = () => {\n        originalDone.apply(activity)\n        runningActivities.delete(activity)\n      }\n\n      return activity\n    },\n  }\n}\n\nconst getUninitializedCache = plugin => {\n  const message =\n    `Usage of \"cache\" instance in \"onPreInit\" API is not supported as ` +\n    `this API runs before cache initialization` +\n    (plugin && plugin !== `default-site-plugin` ? ` (called in ${plugin})` : ``)\n\n  return {\n    // GatsbyCache\n    async get() {\n      throw new Error(message)\n    },\n    async set() {\n      throw new Error(message)\n    },\n    async del() {\n      throw new Error(message)\n    },\n  }\n}\n\nconst availableActionsCache = new Map()\n\nconst runAPI = async (plugin, api, args, activity) => {\n  const gatsbyNode = await importGatsbyPlugin(plugin, `gatsby-node`)\n\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n    const {\n      publicActions,\n      restrictedActionsAvailableInAPI,\n    } = require(`../redux/actions`)\n\n    let availableActions\n    if (availableActionsCache.has(api)) {\n      availableActions = availableActionsCache.get(api)\n    } else {\n      availableActions = {\n        ...publicActions,\n        ...(restrictedActionsAvailableInAPI[api] || {}),\n      }\n\n      availableActionsCache.set(api, availableActions)\n    }\n\n    let boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch\n    )\n\n    if (args.deferNodeMutation) {\n      boundActionCreators = deferActions(boundActionCreators)\n    }\n\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan, activity }\n    )\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    // See https://github.com/gatsbyjs/gatsby/issues/11369\n    const cache =\n      api === `onPreInit`\n        ? getUninitializedCache(plugin.name)\n        : getCache(plugin.name)\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators\n    let apiFinished = false\n    if (api === `createPages`) {\n      let alreadyDisplayed = false\n      const createPageAction = actions.createPage\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args)\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`\n              )}\n            `),\n            ]\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted()\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame)\n            }\n\n            reporter.warn(warning.join(`\\n\\n`))\n            alreadyDisplayed = true\n          }\n        },\n      }\n    }\n\n    const localReporter = getLocalReporter({ activity, reporter })\n\n    const runningActivities = new Set()\n\n    const extendedLocalReporter = extendLocalReporterToCatchPluginErrors({\n      reporter: localReporter,\n      pluginName: plugin.name,\n      runningActivities,\n    })\n\n    const endInProgressActivitiesCreatedByThisRun = () => {\n      // @ts-ignore\n      runningActivities.forEach(activity => activity.end())\n    }\n\n    const shouldDetectNodeMutations = [\n      `sourceNodes`,\n      `onCreateNode`,\n      `createResolvers`,\n      `createSchemaCustomization`,\n      `setFieldsOnGraphQLNodeType`,\n    ].includes(api)\n\n    const apiCallArgs = [\n      {\n        ...args,\n        parentSpan: pluginSpan,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodes\n          : getNodes,\n        getNode: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNode\n          : getNode,\n        getNodesByType: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodesByType\n          : getNodesByType,\n        reporter: extendedLocalReporter,\n        getNodeAndSavePathDependency: shouldDetectNodeMutations\n          ? nodeMutationsWrappers.getNodeAndSavePathDependency\n          : getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          apiFinished = true\n          endInProgressActivitiesCreatedByThisRun()\n          callback(err, val)\n        }\n\n        // try {\n        gatsbyNode[api](...apiCallArgs, cb)\n        // } catch (e) {\n        //   // trackBuildError(api, {\n        //   //   error: e,\n        //   //   pluginName: `${plugin.name}@${plugin.version}`,\n        //   // })\n        //   throw e\n        // }\n      })\n    } else {\n      try {\n        return await gatsbyNode[api](...apiCallArgs)\n      } finally {\n        pluginSpan.finish()\n        apiFinished = true\n        endInProgressActivitiesCreatedByThisRun()\n      }\n    }\n  }\n\n  return null\n}\n\nconst apisRunningById = new Map()\nconst apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\n// @ts-ignore\nfunction apiRunnerNode(api, args = {}, { pluginSource, activity } = {}) {\n  const plugins = store.getState().flattenedPlugins\n\n  // Get the list of plugins that implement this API.\n  // Also: Break infinite loops. Sometimes a plugin will implement an API and\n  // call an action which will trigger the same API being called.\n  // `onCreatePage` is the only example right now. In these cases, we should\n  // avoid calling the originating plugin again.\n  let implementingPlugins = plugins.filter(\n    plugin => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource\n  )\n\n  // @ts-ignore\n  if (api === `sourceNodes` && args.pluginName) {\n    implementingPlugins = implementingPlugins.filter(\n      // @ts-ignore\n      plugin => plugin.name === args.pluginName\n    )\n  }\n\n  // If there's no implementing plugins, return early.\n  if (implementingPlugins.length === 0) {\n    return null\n  }\n\n  return new Promise((resolve, rejectApiRunnerNode) => {\n    // @ts-ignore\n    const { parentSpan, traceId, traceTags, waitForCascadingActions } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${traceId}`\n    } else if (api === `onCreateNode`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.node.internal.contentDigest}${traceId}`\n    } else if (api === `preprocessSource`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.filename}${traceId}`\n    } else if (api === `onCreatePage`) {\n      // @ts-ignore\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${traceId}`\n    } else {\n      // When tracing is turned on, the `args` object will have a\n      // `parentSpan` field that can be quite large. So we omit it\n      // before calling stringify\n      const argsJson = JSON.stringify(_.omit(args, `parentSpan`))\n      id = `${api}|${apiRunInstance.startTime}|${apiRunInstance.traceId}|${argsJson}`\n    }\n    // @ts-ignore\n    apiRunInstance.id = id\n\n    if (waitForCascadingActions) {\n      // @ts-ignore\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    if (apisRunningById.size === 0) {\n      emitter.emit(`API_RUNNING_START`)\n    }\n\n    // @ts-ignore\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    let apiRunPromiseOptions = {}\n    let runPromise\n    if (\n      api === `sourceNodes` &&\n      process.env.GATSBY_EXPERIMENTAL_PARALLEL_SOURCING\n    ) {\n      runPromise = Promise.map\n      // @ts-ignore\n      apiRunPromiseOptions.concurrency = 20\n    } else {\n      runPromise = Promise.mapSeries\n      // @ts-ignore\n      apiRunPromiseOptions = undefined\n    }\n\n    function cleanup({\n      apiRunInstance,\n      results,\n      waitForCascadingActions,\n      apiSpan,\n    }) {\n      // Remove runner instance\n      // @ts-ignore\n      apisRunningById.delete(apiRunInstance.id)\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n      if (apisRunningById.size === 0) {\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n      }\n\n      // Filter empty results\n      // @ts-ignore\n      apiRunInstance.results =\n        results?.filter(result => !_.isEmpty(result)) || []\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!waitForCascadingActions) {\n        apiSpan.finish()\n\n        // @ts-ignore\n        resolve(apiRunInstance.results)\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        instance => {\n          // If none of its trace IDs are running, it's done.\n          // @ts-ignore\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n          if (apisByTraceIdCount === 0) {\n            // @ts-ignore\n            instance.span.finish()\n            // @ts-ignore\n            instance.resolve(instance.results)\n            return false\n          } else {\n            return true\n          }\n        }\n      )\n    }\n\n    runPromise(\n      implementingPlugins,\n      plugin =>\n        importGatsbyPlugin(plugin, `gatsby-node`).then(gatsbyNode => {\n          const pluginName =\n            plugin.name === `default-site-plugin`\n              ? `gatsby-node.js`\n              : plugin.name\n\n          // TODO: rethink createNode API to handle this better\n          if (\n            api === `onCreateNode` &&\n            gatsbyNode?.shouldOnCreateNode && // Don't bail if this api is not exported\n            !gatsbyNode.shouldOnCreateNode(\n              // @ts-ignore\n              { node: args.node },\n              plugin.pluginOptions\n            )\n          ) {\n            // Do not try to schedule an async event for this node for this plugin\n            return null\n          }\n\n          return runAPI(\n            plugin,\n            api,\n            { ...args, parentSpan: apiSpan },\n            activity\n          ).catch(err => {\n            // decorateEvent(`BUILD_PANIC`, {\n            //   pluginName: `${plugin.name}@${plugin.version}`,\n            // })\n\n            const localReporter = getLocalReporter({ activity, reporter })\n\n            const file = stackTrace\n              .parse(err)\n              // @ts-ignore\n              .find(file => /gatsby-node/.test(file.fileName))\n\n            let codeFrame = ``\n            const structuredError = errorParser({ err })\n\n            if (file) {\n              // @ts-ignore\n              const { fileName, lineNumber: line, columnNumber: column } = file\n              const trimmedFileName = fileName.match(/^(async )?(.*)/)[2]\n\n              try {\n                const code = fs.readFileSync(trimmedFileName, {\n                  encoding: `utf-8`,\n                })\n                codeFrame = codeFrameColumns(\n                  code,\n                  {\n                    start: {\n                      line,\n                      column,\n                    },\n                  },\n                  {\n                    highlightCode: true,\n                  }\n                )\n              } catch (_e) {\n                // sometimes stack trace point to not existing file\n                // particularly when file is transpiled and path actually changes\n                // (like pointing to not existing `src` dir or original typescript file)\n              }\n\n              structuredError.location = {\n                start: { line: line, column: column },\n              }\n              structuredError.filePath = fileName\n            }\n\n            structuredError.context = {\n              ...structuredError.context,\n              pluginName,\n              api,\n              codeFrame,\n            }\n\n            localReporter.panicOnBuild(structuredError)\n\n            rejectApiRunnerNode(err)\n            throw err\n          })\n        }),\n      apiRunPromiseOptions\n    )\n      .then(results => {\n        cleanup({\n          apiRunInstance,\n          results,\n          waitForCascadingActions,\n          apiSpan,\n        })\n\n        return\n      })\n      .catch(e => {\n        cleanup({\n          apiRunInstance,\n          results: [],\n          waitForCascadingActions,\n          apiSpan,\n        })\n\n        throw e\n      })\n  })\n}\n\nexport default apiRunnerNode\n"],"mappings":"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"}