import { Document, DocumentField, Logger } from '@stackbit/types';
export declare function sanitizeSlug(slug: string): string;
export declare function convertToRegularTokens(input: string): string;
export declare function extractTokensFromString(input: string): string[];
/**
 * Interpolates url or file path pattern from data.
 * If token does not exist in data returns original token.
 *
 * @example
 * interpolateFileName('posts/{slug}', { slug: 'hello' })
 * => 'posts/hello'
 * interpolateFileName('_posts/{moment_format("YYYY-MM-DD")}-{slug}.md', { slug: 'hello' })
 * => '_posts/2020-11-16-hello.md'
 *
 * @param {string} pathTemplate
 * @param {Object} data
 * @return {string}
 */
export declare function interpolatePath(pathTemplate: string, data: Record<string, any>): string;
export declare function getFileDates(filePath: string): Promise<{
    createdAt: string;
    updatedAt: string;
}>;
export declare function getFileData(filePath: string): Promise<any>;
export declare function saveFileData(filePath: string, data: any): Promise<boolean>;
export declare function saveBase64Data(filePath: string, data: string): Promise<void>;
export declare function saveFromUrl(filePath: string, url: string): Promise<void>;
export declare function processMarkdownImagePaths(markdown: string, handler: (imagePath: string) => string): string;
export declare function extractTokensAndValuesFromFilePath(filePath: string, filePathPattern: string): Record<string, string>;
type ForEachFieldHandler = (field: DocumentField, fieldPath: (string | number)[]) => Promise<void>;
export declare function forEachFieldInDocument(document: Document, handler: ForEachFieldHandler): Promise<void>;
export declare function forEachFieldInFields(documentFields: Record<string, DocumentField>, fieldPath: (string | number)[], handler: ForEachFieldHandler): Promise<void>;
export declare function readFilesFromDirectory(directoryPath: string, logger: Logger, handler: (relFilePath: string, fullFilePath: string, data: any) => Promise<void>): Promise<void>;
export {};
//# sourceMappingURL=utils.d.ts.map