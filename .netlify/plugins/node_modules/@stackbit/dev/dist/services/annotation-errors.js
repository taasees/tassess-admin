"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logAnnotationErrors = void 0;
const chalk_1 = __importDefault(require("chalk"));
const lodash_1 = __importDefault(require("lodash"));
const path_1 = __importDefault(require("path"));
function logAnnotationErrors(errors, logger, baseDir, sourcemaps) {
    if (lodash_1.default.isEmpty(errors)) {
        return;
    }
    logger.error(`Found ${errors.length} annotation error${errors.length !== 1 ? 's' : ''}`);
    for (const error of errors) {
        let message = error.message;
        const sourcemap = sourcemaps?.[error.elementXPath];
        if (sourcemap) {
            const relFileName = path_1.default.isAbsolute(sourcemap.file) ? path_1.default.relative(baseDir, sourcemap.file) : sourcemap.file;
            message += ` (${chalk_1.default.yellow(`${relFileName}:${sourcemap.start?.line}`)})`;
        }
        else if (error.elementXPath) {
            message += ` (${error.elementXPath})`;
        }
        logger.error(message);
    }
}
exports.logAnnotationErrors = logAnnotationErrors;
//# sourceMappingURL=annotation-errors.js.map