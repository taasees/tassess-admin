"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadEnv = void 0;
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const dotenv_1 = __importDefault(require("dotenv"));
// dot env file loading - based on Next.js env loading
// https://github.com/vercel/next.js/blob/canary/packages/next-env/index.ts
async function loadEnv(dir, logger) {
    const mode = process.env.NODE_ENV === 'production' ? 'production' : 'development';
    const dotEnvFiles = [`.env.${mode}.local`, '.env.local', `.env.${mode}`, '.env'];
    for (const envFile of dotEnvFiles) {
        const envFilePath = path_1.default.join(dir, envFile);
        if (!(await fs_extra_1.default.pathExists(envFilePath))) {
            continue;
        }
        logger?.debug(`[env] Loading env from ${envFilePath}`);
        dotenv_1.default.config({ path: envFilePath });
    }
}
exports.loadEnv = loadEnv;
//# sourceMappingURL=env.js.map