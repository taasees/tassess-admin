import { ContentStoreTypes } from '@stackbit/cms-core';
import { Preset } from '@stackbit/sdk';
export interface PresetParams {
    label: string;
    metadata: any;
    thumbnail: any;
    locale?: string;
}
export interface ReferenceBehavior {
    behavior?: 'copyReference' | 'duplicateContents';
    nonDuplicatableModels?: string[];
    duplicatableModels?: string[];
}
export declare function createPreset({ documentsById, assetsById, fieldDataPath, presetParams, contentStoreLocales, referenceBehavior, staticAssetsPublicPath }: {
    documentsById: Record<string, ContentStoreTypes.Document>;
    assetsById: Record<string, ContentStoreTypes.Asset>;
    fieldDataPath: string[];
    presetParams: PresetParams;
    contentStoreLocales?: ContentStoreTypes.ContentStoreLocale[];
    referenceBehavior?: ReferenceBehavior;
    staticAssetsPublicPath?: string;
}): Promise<Preset>;
export declare function savePreset(dir: string, presetParams: PresetParams, preset: Preset, logger?: any): Promise<{
    files: string[];
    preset: {
        thumbnail: string | undefined;
        label: string;
        modelName: string;
        srcType: string;
        srcProjectId: string;
        locale?: string | undefined;
        metadata: any;
        data: Record<string, any>;
    };
}>;
export declare function createAndSavePreset(dir: string, documentsById: Record<string, ContentStoreTypes.Document>, assetsById: Record<string, ContentStoreTypes.Asset>, fieldDataPath: string[], presetParams: PresetParams, referenceBehavior?: ReferenceBehavior, contentStoreLocales?: ContentStoreTypes.ContentStoreLocale[], logger?: any): Promise<{
    files: string[];
    preset: {
        thumbnail: string | undefined;
        label: string;
        modelName: string;
        srcType: string;
        srcProjectId: string;
        locale?: string | undefined;
        metadata: any;
        data: Record<string, any>;
    };
}>;
export declare function generatePresetFileName(preset: Preset): string;
export declare function deletePreset(dir: string, presetId: string, logger?: any): Promise<string[]>;
//# sourceMappingURL=presets-service.d.ts.map