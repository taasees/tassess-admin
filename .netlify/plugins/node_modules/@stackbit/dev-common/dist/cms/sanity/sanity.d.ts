export = Sanity;
declare class Sanity {
    constructor(options: any);
    logger: any;
    userLogger: any;
    schema: any;
    encodingResult: any;
    encoderDelegate: cmsSanity.SanityEncoderDelegate | null;
    stackbitConfig: any;
    encodeDelimiter: any;
    onContentUpdate: any;
    rootDir: any;
    appDir: any;
    repoDir: any;
    staticThemeAssetsFilePath: any;
    staticThemeAssetsPublicPath: any;
    project: any;
    studioFolder: any;
    studioAbsPath: string;
    sanityQuery: any;
    debug(message: any, data: any): void;
    error(message: any, data: any): void;
    getEncodingResult(): any;
    getLocalizedFieldData(): Partial<any>;
    overlayDraftDocuments(docs: any): Partial<any>;
    getSchemaKey(): string;
    getModelsForProjectId(projectId: any): any;
    getEnvironmentForProjectId(projectId: any): any;
    getPresets(): any;
    getMappedModels(): {
        [x: number]: _.Dictionary<any>;
    };
    run({ spawnRunner }?: {
        spawnRunner: any;
    }): Promise<void>;
    restart({ spawnRunner }?: {
        spawnRunner: any;
    }): Promise<void>;
    startWatchingContentUpdates(): void;
    contentChangeSubscription: import("@stackbit/cms-sanity/node_modules/rxjs").Subscription | null | undefined;
    contentChangeSubscriptionInterval: NodeJS.Timer | null | undefined;
    createSanityListener(): import("@stackbit/cms-sanity/node_modules/rxjs").Subscription;
    encodeContentUpdateResult(event: any): void;
    stopWatchingContentUpdates(): void;
    postPull(updatedFiles: any, { spawnRunner }?: {
        spawnRunner: any;
    }): Promise<{
        schemaChanged?: undefined;
    } | {
        schemaChanged: boolean;
    }>;
    someSchemaFiles(updatedFiles: any): boolean;
    isSchemaFile(filePath: any): any;
    fetchSchema({ spawnRunner }?: {
        spawnRunner: any;
    }): Promise<{
        schemaChanged: boolean;
    }>;
    fetchDataAndEncode(): Promise<void>;
    encodeListenResult(result: any): any;
    encodeItems(items: any, initial: any): any;
    clearCache(): void;
}
import cmsSanity = require("@stackbit/cms-sanity");
import _ = require("lodash");
//# sourceMappingURL=sanity.d.ts.map