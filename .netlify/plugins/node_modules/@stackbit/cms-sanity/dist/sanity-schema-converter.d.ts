import * as StackbitTypes from '@stackbit/types';
import type * as SanityTypes from '@sanity/types';
export type SchemaContext = null;
export type ModelWithContext = StackbitTypes.Model<ModelContext>;
export type ModelContext = {
    localizedFieldsModelMap?: LocalizedFieldsModelMap;
    fieldAliasMap?: FieldAliasMap;
} | null;
/**
 * Maps model fields to the Internationalized Array types
 * The key is the field path of the field within the model.
 */
export type LocalizedFieldsModelMap = Record<string, {
    arrayModelName: string;
    arrayValueModelName: string;
}>;
export type FieldAliasMap = Record<string, {
    origTypeName: string;
    resolvedTypeName: string;
}[]>;
/**
 * Converts Sanity schema to Netlify Create Schema.
 *
 * @param schema Schema as received from sanity-schema-converter.js
 * @param defaultLocale The default locale specified in the SanityContentSource constructor.
 */
export declare function convertSchema({ schema, logger, defaultLocale }: {
    schema: {
        models: SanityTypes.SchemaTypeDefinition[];
    };
    logger: StackbitTypes.Logger;
    defaultLocale?: string;
}): {
    models: ModelWithContext[];
    locales: StackbitTypes.Locale[];
};
//# sourceMappingURL=sanity-schema-converter.d.ts.map