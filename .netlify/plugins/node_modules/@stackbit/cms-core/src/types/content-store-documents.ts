import { DocumentStatus, ConfigDelegate, DocumentVersion, DocumentVersionWithDocument, DocumentPermissions } from '@stackbit/types';
import { DocumentField, DocumentFieldAPI, DocumentFieldAPIForType, DocumentStringLikeFieldForType } from './content-store-document-fields';
import { APIDocument, DocumentStringLikeFieldForTypeAPIV2 } from './content-store-api-document-fields';
import { APICustomActionDocument } from './custom-actions';

export interface Document {
    type: 'document';
    srcType: string;
    srcProjectId: string;
    srcProjectUrl: string;
    srcEnvironment: string;
    srcObjectId: string;
    srcObjectUrl: string;
    /** @deprecated used by older, non-csi cms interface  */
    srcObjectLabel?: string;
    getPreview: (options: { delegate?: ConfigDelegate; locale?: string }) => DocumentPreview;
    srcModelName: string;
    srcModelLabel: string;
    isChanged: boolean;
    hidden?: boolean;
    status: DocumentStatus;
    createdAt: string;
    createdBy?: string;
    updatedAt: string;
    updatedBy?: string[];
    locale?: string;
    fields: Record<string, DocumentField>;
    permissions?: DocumentPermissions;
}

export interface DocumentPreview {
    previewTitle: string;
    previewSubtitle?: string;
    previewImage?: unknown;
}

export interface Asset {
    type: 'asset';
    srcType: string;
    srcProjectId: string;
    srcProjectUrl: string;
    srcEnvironment: string;
    srcObjectId: string;
    srcObjectUrl: string;
    srcObjectLabel: string;
    srcModelName: string;
    srcModelLabel: string;
    isChanged: boolean;
    hidden?: boolean;
    status: DocumentStatus;
    createdAt: string;
    createdBy?: string;
    updatedAt: string;
    updatedBy?: string[];
    locale?: string;
    fields: AssetFields;
}

export type AssetField = DocumentStringLikeFieldForType<'string' | 'text'> | AssetFileField;

export type AssetFields = {
    [key in string]: AssetField;
} & {
    title: DocumentStringLikeFieldForType<'string'>;
} & {
    file: AssetFileField;
};

export type AssetFileField = AssetFileFieldNonLocalized | AssetFileFieldLocalized;

export interface AssetFileFieldNonLocalized extends AssetFileFieldBase, AssetFileFieldProps {
    label?: string;
    localized?: false;
}
export interface AssetFileFieldLocalized extends AssetFileFieldBase {
    label?: string;
    localized: true;
    locales: Record<
        string,
        {
            locale: string;
        } & AssetFileFieldProps
    >;
}

export interface AssetFileFieldBase {
    type: 'assetFile';
}

export interface AssetFileFieldProps {
    url: string;
    fileName?: string;
    contentType?: string;
    size?: number;
    dimensions?: {
        width?: number;
        height?: number;
    };
}

/**
 * API Documents and Assets
 */
export type APIObject = APIDocumentObject | APIImageObject;

export interface APIDocumentObject extends Omit<Document, 'getPreview' | 'fields' | 'type'> {
    type: 'object';
    srcObjectLabel: string;
    actions?: APICustomActionDocument[];
    fields: Record<string, DocumentFieldAPI>;
}

export interface APIImageObject extends Omit<Asset, 'fields' | 'type'> {
    type: 'image';
    fields: AssetFieldsAPI;
}

export type AssetFieldsAPI = {
    title: DocumentFieldAPIForType<'string'>;
    url: DocumentFieldAPIForType<'string'>;
};

export interface APIAsset {
    objectId: string;
    createdAt: string;
    url: string;
    title?: string;
    fileName?: string;
    contentType?: string;
    size?: number;
    width?: number;
    height?: number;
}

export type APIDocumentVersion = DocumentVersion & {
    object?: APIObject;
    apiDocument?: APIDocument;
};

export type APIDocumentVersionWithDocument = DocumentVersionWithDocument & {
    object: APIObject;
    apiDocument: APIDocument;
};
