import { IntegrationHandler, FunctionHandler } from "@netlify/integrations";
import { NetlifyIntegrationClient } from "../api/index.js";
import { BuildHookFunction, NetlifySdkContext, BuildHookOptions, BuildHookType } from "../index.js";
export type BuildHooks = Record<BuildHookType, BuildHookFunction | null>;
export type BuildHooksOptions = Record<BuildHookType, BuildHookOptions | null>;
export type Handlers = Record<string, FunctionHandler<NetlifySdkContext<any, any>> | undefined>;
export type Wrappers = Record<string, IntegrationHandler | undefined>;
export type BuildContextContext<SiteConfig, TeamConfig> = {
    site_id: string;
    team_id?: string;
    site_config: SiteConfig;
    team_config?: TeamConfig;
    client: NetlifyIntegrationClient<SiteConfig, TeamConfig>;
};
export type BuildContextHandler<SiteConfig, TeamConfig, BuildContext> = (context: BuildContextContext<SiteConfig, TeamConfig>) => Promise<BuildContext>;
export type NetlifyIntegrationProps<Config, Context, Site, Team> = {
    buildConfigSchema?: Config;
    buildContextSchema?: Context;
    siteConfigSchema?: Site;
    teamConfigSchema?: Team;
};
export type EdgeFunctionsSettings = {
    prefix: string;
    path: string;
};
export type EdgeFunctionsOptions = {
    prefix: string;
};
export type FunctionsSettings = {
    prefix: string;
    path: string;
};
export type FunctionsOptions = {
    prefix: string;
};
//# sourceMappingURL=types.d.ts.map