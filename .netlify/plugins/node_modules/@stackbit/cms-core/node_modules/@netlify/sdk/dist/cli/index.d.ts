import { NetlifyIntegration } from "../integration/index.js";
import { IntegrationConfiguration } from "./util.js";
export { type BuildExtensionUIContext, type BuildExtensionUIOptions, buildExtensionUI, } from "./build/build_extension_ui.js";
export { generateConnectPlugin, createDevelopmentContentEngine, } from "../integration/connect/cli.js";
type SDKArtifactOptions = {
    /** This is the root of the integration */
    cwd: string;
    /** This is the output directory of the SDK  */
    outDir: string;
};
export declare const generateBuildEventHandler: (integration: NetlifyIntegration, config: IntegrationConfiguration, opts: SDKArtifactOptions) => Promise<void>;
export declare const createIntegrationUIFiles: (surfaceScriptUrl: string, outDir: string, slug: string) => Promise<void>;
export declare const buildIntegrationUI: ({ outDir, mainPath, surfaceScriptUrl, watch, id, }: {
    outDir: string;
    mainPath: string;
    surfaceScriptUrl: string;
    watch?: boolean;
    id: string;
}) => Promise<void>;
export declare const processHandlers: (opts: SDKArtifactOptions, config: IntegrationConfiguration) => Promise<void>;
export declare const processWrappers: (wrappers: any, opts: SDKArtifactOptions) => Promise<void>;
//# sourceMappingURL=index.d.ts.map