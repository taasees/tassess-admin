import { outdent as javascript } from "outdent";
const callbackReturn = javascript `
    return {
        integrationContext: uiState.integrationContext,
        surfaceConfig: uiState.surfaceConfig,
        surfaceInputsData: uiState.surfaceInputsData,
        surfaceRouteConfig: updatedState?.surfaceRouteConfig ?? uiState.surfaceRouteConfig
    };
`;
function generateCallbackPickElement(callback) {
    const { formId, elementId } = callback;
    if (elementId) {
        const safeElementId = JSON.stringify(elementId);
        if (formId) {
            const safeFormId = JSON.stringify(formId);
            return javascript `uiState.picker.getFormElementById(${safeFormId}, ${safeElementId})`;
        }
        else {
            return javascript `uiState.picker.getElementById(${safeElementId})`;
        }
    }
    else {
        return javascript `undefined`;
    }
}
export const generateCallback = (eventId, callback) => {
    const pickElement = generateCallbackPickElement(callback);
    return javascript `
    netlifyContext.on("${eventId}", async (uiState) => {
        const callback = ${callback.fn.toString()}
        const element = ${pickElement};
        const updatedState = await callback(uiState, element);
  
        ${callbackReturn}
    });

`;
};
export const generateInteractiveCallback = (eventId, callback) => {
    const pickElement = generateCallbackPickElement(callback);
    return javascript `
    netlifyContext.on("${eventId}", async (uiState, value) => {
        const callback = ${callback.fn.toString()}
        const element = ${pickElement};
        const updatedState = await callback(uiState, value, element);

        ${callbackReturn}
    });
    
`;
};
//# sourceMappingURL=callback.js.map